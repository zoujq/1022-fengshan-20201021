C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\Main.obj
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE ..\..\User\Main.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Application;..
                    -\..\User\INC;..\..\Libraries;..\..\User\pt_os) DEBUG PRINT(.\List\Main.lst) TABS(2) OBJECT(.\Output\Main.obj)

line level    source

   1          //================================================================================
   2          #define  ALLOCATE_EXTERN
   3          #include "YX23F01CB.h"
   4          #include "YX23F01CB_SYS.h"
   5          #include "YX23F01CB_IO_INIT.h"
   6          #include "YX23F01CB_GeneralKey_Touch_Lib_V1.04\YX23F01CB_GeneralKey_Touch_Lib.h"
   7          #include "YX23F01CB_GeneralKey_Touch_Lib_V1.04\YX23F01CB_GeneralKey_Touch_Filter.h"
   8          #include "YX23F01CB_GeneralKey_Touch_Lib_V1.04\YX23F01CB_GeneralKey_Touch_Multibutton.h"
   9          #include "YX23F01CB_TouchUartDebug_Lib_V1.00\YX23F01CB_TouchUartDebug_Lib_CFG.h"
  10          #include "YX23F01CB_TouchUartDebug_Lib_V1.00\YX23F01CB_TouchUartDebug_Lib.h"
  11          #include "delay.h"
  12          #include <stdio.h>
  13          
  14          #define TK1 1<<15
  15          #define TK2 1<<14
  16          #define TK3 1<<13
  17          #define TK4 1<<12
  18          #define TK5 1<<11
  19          
  20          
  21          extern void init_printf();
  22          void init_ntc_adc();
  23          void init_display();
  24          unsigned int get_ntc_adc();
  25          void  buzzer();
  26          u16 get_temp();
  27          void init_TIMER0();
  28          void key_check();
  29          void display_flash();
  30          //================================================================================
  31          
  32          char display_data1=0;
  33          char display_data2=0;
  34          char display_point=0;
  35          char display_uv=0;
  36          char display_touch_led=0;
  37          u32 yuyue_counter=0;
  38          
  39          u32 counter=0;
  40          
  41          int set_temp=90;
  42          char display_mode=0;
  43          char yuyue_start=0;
  44          
  45          char kid_lock=0;
  46          char led_buff=0;
  47          u16 current_temp=0;
  48          char err_code=0;
  49          char start_work=0;
  50          
  51          char dingshi_start=0;
  52          u32 dingshi_counter=0;
  53          char work_mode=0;
  54          
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 2   

  55          char uv_start=0;
  56          u32 uv_counter=20;
  57          char last_work_mode=0;
  58          u32 count0=0;
  59          u32 jian_ge=0;
  60          //================================================================================
  61          
  62          void set_dingshi_time_plus()
  63          {
  64   1        dingshi_counter+=30;
  65   1        if(dingshi_counter>6*60)
  66   1        {
  67   2          dingshi_counter=30;
  68   2        }
  69   1      }
  70          
  71          void set_dingshi_time_add()
  72          {
  73   1        dingshi_counter+=30;
  74   1        if(dingshi_counter>6*60)
  75   1        {
  76   2          dingshi_counter=6*60;
  77   2        }
  78   1      }
  79          void set_dingshi_time_red()
  80          {
  81   1        if(dingshi_counter>30)
  82   1        {
  83   2          dingshi_counter-=30;
  84   2        }
  85   1      }
  86          
  87          void display_dingshi_set()
  88          {
  89   1        display_data1=dingshi_counter/60;
  90   1        display_data2=(dingshi_counter%60)/6;
  91   1        display_point=1;
  92   1      }
  93          
  94          
  95          void display_dingshi_time()
  96          {
  97   1        display_data1=dingshi_counter/60;
  98   1        display_data2=(dingshi_counter%60)/6;
  99   1        display_point=1;
 100   1      }
 101          void display_uv_time()
 102          {
 103   1        display_data1=uv_counter/10;
 104   1        display_data2=uv_counter%10;
 105   1        display_point=0;
 106   1      }
 107          
 108          void display_off()
 109          {
 110   1        display_data1=8;
 111   1        display_data2=8;
 112   1        display_point=0;
 113   1      }
 114          
 115          void display_none()
 116          {
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 3   

 117   1        display_data1='+';
 118   1        display_data2='+';
 119   1        display_point=0;
 120   1      }
 121          void key_check()
 122          {
 123   1        static u16 ON_TK=0;
 124   1        static u16 i3=0;
 125   1        if(TouchKeyFlag )
 126   1        {   
 127   2          if(ON_TK==0)
 128   2          {
 129   3            ON_TK=1;
 130   3            if(work_mode==0)
 131   3            {
 132   4              work_mode=1;
 133   4              dingshi_counter=90;
 134   4      
 135   4            }
 136   3            else
 137   3            {
 138   4              if(dingshi_start==1)
 139   4              {
 140   5                work_mode=0;
 141   5                dingshi_counter=0;
 142   5                dingshi_start=0;
 143   5                uv_start=0;
 144   5                uv_counter=0;
 145   5      
 146   5              }
 147   4              else
 148   4              {
 149   5                set_dingshi_time_plus();  
 150   5                display_dingshi_set();          
 151   5              }
 152   4            }
 153   3            count0=0;
 154   3          }
 155   2          
 156   2        }
 157   1        else
 158   1        {
 159   2          ON_TK=0;
 160   2        }
 161   1      
 162   1        if(work_mode==0)
 163   1        {
 164   2          static u16 i5=0;
 165   2          count0=0; 
 166   2          display_off();    
 167   2          if(i5==1)
 168   2          {
 169   3            display_touch_led=0x01;
 170   3          } 
 171   2          else if(i5==60)
 172   2          {         
 173   3            display_touch_led=0x00;         
 174   3          }
 175   2          else if(i5==120)
 176   2          {
 177   3            i5=0;
 178   3          }
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 4   

 179   2          i5++;
 180   2        }
 181   1        else
 182   1        {
 183   2          display_touch_led=1;
 184   2          if(count0<340)
 185   2          {
 186   3            count0++;
 187   3            if(count0%50==0)
 188   3            {
 189   4              static char i=0;
 190   4              if(i==0)
 191   4              {
 192   5                display_dingshi_set();          
 193   5                i=1;
 194   5              }
 195   4              else
 196   4              {
 197   5                display_none();
 198   5                i=0;
 199   5              }
 200   4              
 201   4            }
 202   3      
 203   3          }
 204   2          else
 205   2          {
 206   3            
 207   3            if(dingshi_counter>0)
 208   3            {
 209   4              dingshi_start=1;
 210   4              display_dingshi_time();
 211   4            }
 212   3            else 
 213   3            {
 214   4              dingshi_start=0;
 215   4              if(uv_start==0)
 216   4              {
 217   5                uv_start=1;
 218   5                uv_counter=20;
 219   5              }
 220   4              else if(uv_counter==0)
 221   4              {
 222   5                uv_start=0;
 223   5                work_mode=0;
 224   5                
 225   5              }
 226   4              else if(uv_counter>0)
 227   4              {
 228   5                display_uv_time();
 229   5              }
 230   4              
 231   4            }
 232   3          }
 233   2      
 234   2        }
 235   1        
 236   1      
 237   1      }
*** WARNING C280 IN LINE 124 OF ..\..\User\Main.c: 'i3': unreferenced local variable
 238          #define FAN P1_3
 239          #define UV P0_7
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 5   

 240          #define JIARE P0_2
 241          
 242          void work_check()
 243          {
 244   1        static char inited=0;
 245   1        static u16 count02=0;
 246   1        if(inited==0)
 247   1        {
 248   2          P1M3=GPIO_Out_PP;//fan
 249   2          P0M7=GPIO_Out_PP;//vu
 250   2          P0M2=GPIO_Out_PP;//jiare
 251   2          inited=1;
 252   2        }
 253   1        
 254   1        if(work_mode==1 )
 255   1        {
 256   2          if(dingshi_start==1)
 257   2          {
 258   3            FAN=1;
 259   3            JIARE=1;
 260   3          }
 261   2          else
 262   2          {
 263   3            FAN=0;
 264   3            JIARE=0;
 265   3          }
 266   2          if(uv_start==1 && uv_counter>0)
 267   2          {
 268   3            if(count02>0)
 269   3            {
 270   4              UV=0;
 271   4            }
 272   3            else
 273   3            {
 274   4              UV=1;
 275   4            }
 276   3            display_uv=1;
 277   3          }
 278   2          else
 279   2          {
 280   3            UV=0;
 281   3            display_uv=0;
 282   3          }
 283   2        }
 284   1        else
 285   1        {
 286   2          FAN=0;
 287   2          JIARE=0;
 288   2          UV=0;
 289   2          display_uv=0;
 290   2          display_off();
 291   2        }
 292   1      
 293   1        if(last_work_mode!=dingshi_start)
 294   1        {
 295   2          
 296   2          if(last_work_mode==1 && dingshi_start==0)
 297   2          {
 298   3            count02++;
 299   3            if(count02<1000)
 300   3            {
 301   4              FAN=1;
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 6   

 302   4            }
 303   3            else
 304   3            {
 305   4              count02=0;
 306   4              FAN=0;
 307   4              last_work_mode=dingshi_start;
 308   4            }
 309   3          }
 310   2          else
 311   2          {
 312   3            last_work_mode=dingshi_start;
 313   3          }
 314   2        }
 315   1        else
 316   1        {
 317   2          count02=0;
 318   2        }
 319   1        
 320   1      
 321   1      
 322   1      }
 323          
 324          
 325          /***********************************红外解码**************************************/
 326          u8 c_timer=0; 
 327          u8 c_end_flag=0;
 328          u8 c_start_flag=0;
 329          xdata u8 nec_buff[34];
 330          u8 nec_index=0;
 331          xdata u8 nec_data[4];
 332          void init_TIMER0()
 333          {
 334   1        TCON1 = 0x00;           //
 335   1        TMOD = 0x00;            //
 336   1        
 337   1        TH0 = 0xFF;
 338   1        TL0 = 0x7B;             //100us
 339   1        IE |= 0x02;             //
 340   1        TCON |= 0x10;           //
 341   1          
 342   1      }
 343          
 344          void TIMER0_Rpt(void) interrupt TIMER0_VECTOR  //时基100us
 345          {
 346   1        static u32 tt=0;
 347   1      
 348   1        c_timer++;
 349   1        if(c_timer>150)
 350   1        {
 351   2          c_end_flag=1;
 352   2          c_timer=0;
 353   2        }
 354   1        if(tt++>600000)
 355   1        {
 356   2          tt=0;
 357   2          if(dingshi_counter>0)
 358   2          {
 359   3            if(dingshi_start==1)
 360   3            {
 361   4              dingshi_counter--;      
 362   4            }
 363   3            
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 7   

 364   3          }
 365   2          if(uv_counter>0)
 366   2          {
 367   3            if(uv_start==1)
 368   3            {
 369   4              uv_counter--;
 370   4            }
 371   3          } 
 372   2        }
 373   1        jian_ge++;
 374   1      } 
 375          void init_exti0()
 376          {
 377   1        P3M5 = 0x69;            //P35设置为带SMT上拉输入
 378   1        PITS4 |= 0x04;          //INT17下降沿  
 379   1        PINTE2 = 0x02;
 380   1        IE2 |= 0x01;              //打开INT17中断
 381   1        
 382   1      }
 383          
 384          void ISR_INT16_17(void)  interrupt INT16_17_VECTOR
 385          {
 386   1        PINTF2 &=~ 0x02;        //清除INT17中断标志位    
 387   1        if(c_start_flag)
 388   1        {
 389   2          if(c_timer>105)
 390   2          {
 391   3            nec_index=0;
 392   3          }
 393   2          nec_buff[nec_index]=c_timer;
 394   2          c_timer=0;
 395   2          nec_index++;
 396   2          if(nec_index>33)
 397   2          {
 398   3            nec_index=0;
 399   3          }
 400   2          c_end_flag=0;
 401   2        }
 402   1        else
 403   1        {
 404   2          c_start_flag=1;
 405   2          c_timer=0;
 406   2        }
 407   1      }
 408          void chu_li_nec()
 409          {
 410   1        if(nec_data[0]==0 && nec_data[1]==0xff)
 411   1        {
 412   2          if(jian_ge<10000)
 413   2          {
 414   3            return;
 415   3          }
 416   2          jian_ge=0;
 417   2          if(nec_data[2]==0)
 418   2          {
 419   3            if(work_mode==0)
 420   3            {
 421   4              work_mode=1;
 422   4              dingshi_counter=90;
 423   4            }
 424   3            else
 425   3            {
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 8   

 426   4              work_mode=0;
 427   4              dingshi_counter=0;
 428   4              dingshi_start=0;
 429   4              uv_start=0;
 430   4              uv_counter=0;
 431   4            }
 432   3          }
 433   2          else if(work_mode==1 && uv_start==0)
 434   2          {
 435   3            if(nec_data[2]==0x08)//
 436   3            {
 437   4                        
 438   4              set_dingshi_time_add();       
 439   4              count0=0;
 440   4            }
 441   3            else if(nec_data[2]==0x0A)//
 442   3            {
 443   4                
 444   4              set_dingshi_time_red();       
 445   4              count0=0;
 446   4            }
 447   3            
 448   3          }
 449   2          if(nec_data[2]==0x02)//uv
 450   2          {
 451   3              if(uv_start==0)
 452   3              {
 453   4                work_mode=1;
 454   4                uv_start=1;
 455   4                uv_counter=20;
 456   4                dingshi_counter=0;
 457   4                dingshi_start=0;
 458   4              }
 459   3              else
 460   3              {         
 461   4                work_mode=0;
 462   4                dingshi_counter=0;
 463   4                dingshi_start=0;
 464   4                uv_start=0;
 465   4                uv_counter=0;
 466   4              }
 467   3              
 468   3            }
 469   2        }
 470   1        
 471   1      }
 472          extern char putchar (char c);
 473          void decode_nec()
 474          {
 475   1        if(nec_index && c_end_flag)
 476   1        {
 477   2          nec_data[0]=(nec_buff[1]<0x0F ? 0 : 1)<<0 |
 478   2                (nec_buff[2]<0x0F ? 0 : 1)<<1 |
 479   2                (nec_buff[3]<0x0F ? 0 : 1)<<2 |
 480   2                (nec_buff[4]<0x0F ? 0 : 1)<<3 |
 481   2                (nec_buff[5]<0x0F ? 0 : 1)<<4 |
 482   2                (nec_buff[6]<0x0F ? 0 : 1)<<5 |
 483   2                (nec_buff[7]<0x0F ? 0 : 1)<<6 |
 484   2                (nec_buff[8]<0x0F ? 0 : 1)<<7 ;
 485   2          nec_data[1]=(nec_buff[9]<0x0F ? 0 : 1)<<0 |
 486   2                (nec_buff[10]<0x0F ? 0 : 1)<<1 |
 487   2                (nec_buff[11]<0x0F ? 0 : 1)<<2 |
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 9   

 488   2                (nec_buff[12]<0x0F ? 0 : 1)<<3 |
 489   2                (nec_buff[13]<0x0F ? 0 : 1)<<4 |
 490   2                (nec_buff[14]<0x0F ? 0 : 1)<<5 |
 491   2                (nec_buff[15]<0x0F ? 0 : 1)<<6 |
 492   2                (nec_buff[16]<0x0F ? 0 : 1)<<7 ;
 493   2          nec_data[2]=(nec_buff[17]<0x0F ? 0 : 1)<<0 |
 494   2                (nec_buff[18]<0x0F ? 0 : 1)<<1 |
 495   2                (nec_buff[19]<0x0F ? 0 : 1)<<2 |
 496   2                (nec_buff[20]<0x0F ? 0 : 1)<<3 |
 497   2                (nec_buff[21]<0x0F ? 0 : 1)<<4 |
 498   2                (nec_buff[22]<0x0F ? 0 : 1)<<5 |
 499   2                (nec_buff[23]<0x0F ? 0 : 1)<<6 |
 500   2                (nec_buff[24]<0x0F ? 0 : 1)<<7 ;
 501   2          nec_data[3]=(nec_buff[25]<0x0F ? 0 : 1)<<0 |
 502   2                (nec_buff[26]<0x0F ? 0 : 1)<<1 |
 503   2                (nec_buff[27]<0x0F ? 0 : 1)<<2 |
 504   2                (nec_buff[28]<0x0F ? 0 : 1)<<3 |
 505   2                (nec_buff[29]<0x0F ? 0 : 1)<<4 |
 506   2                (nec_buff[30]<0x0F ? 0 : 1)<<5 |
 507   2                (nec_buff[31]<0x0F ? 0 : 1)<<6 |
 508   2                (nec_buff[32]<0x0F ? 0 : 1)<<7 ;
 509   2          nec_index=0;
 510   2          chu_li_nec();
 511   2          
 512   2      //    putchar(nec_data[0]);
 513   2      //    putchar(nec_data[1]);
 514   2      //    putchar(nec_data[2]);
 515   2      //    putchar(nec_data[3]);
 516   2          
 517   2          nec_data[0]=0;
 518   2          nec_data[1]=0;
 519   2          nec_data[2]=0;
 520   2          nec_data[3]=0;
 521   2        }
 522   1      }
 523          
 524          
 525          void main()
 526          {
 527   1        
 528   1        SystemInit();           //
 529   1        //init_printf();
 530   1        init_display();
 531   1        init_TIMER0();
 532   1        init_exti0();
 533   1        EA = 1;
 534   1        CTK_Init(); 
 535   1                    
 536   1      
 537   1        //printf("start\n\r");  
 538   1        while(1)
 539   1        {
 540   2      
 541   2          if(OneCycleScanDone)
 542   2          {
 543   3            TouchRawDataFilter();   //
 544   3            Touch_Signal_Handle();
 545   3            TouchMultibuttonHandle(); //
 546   3            OneCycleScanDone = 0;
 547   3      
 548   3          }
 549   2          
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 10  

 550   2          key_check();
 551   2          decode_nec();
 552   2          Delay_ms(1);
 553   2          counter++;
 554   2          display_flash();
 555   2          work_check();
 556   2      
 557   2        } 
 558   1      }
 559          
 560          
 561          
 562          
 563          
 564          /*************************************ADC************************************************/
 565          //0~119℃
 566          u16 code Temp_Table[1]={1
 567          
 568          };
 569          
 570          void init_ntc_adc()
 571          {
 572   1        
 573   1        P0M2 = 0x01;                //
 574   1        ADCC0 = 0x80;           //
 575   1        Delay_50us(1);            //
 576   1        ADCC1 = 2;            //
 577   1        ADCC2 = 0x4B;           //  
 578   1      }
 579          unsigned int get_ntc_adc()
 580          {
 581   1        ADCC0 |= 0x40;          //
 582   1        while(!(ADCC0&0x20));     //
 583   1        ADCC0 &=~ 0x20;         //
 584   1        return ADCR;
 585   1      }
 586          
 587          u16 get_temp()
 588          {
 589   1        u16 n=0;
 590   1        u16 ntc_adc=get_ntc_adc();
 591   1        
 592   1        for(n=0;n<120;n++)
 593   1        {
 594   2          if(Temp_Table[n]<ntc_adc)
 595   2          {
 596   3            break;
 597   3          }
 598   2        }
 599   1        // printf("ntc_adc:%d,wen_du:%d\n", ntc_adc,n);
 600   1        if(ntc_adc==0)
 601   1        {
 602   2          err_code=2;
 603   2        }
 604   1        else if(ntc_adc==4095)
 605   1        {
 606   2          err_code=1;
 607   2        }
 608   1      
 609   1        return n;
 610   1      
 611   1      }
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 11  

 612          
 613          
 614          /***************************************************************************/
 615          //
 616          #define DISPLAY_A P2_0
 617          #define DISPLAY_B P2_1
 618          #define DISPLAY_C P2_2
 619          #define DISPLAY_D P2_3
 620          
 621          //
 622          #define DISPLAY_COM1 P3_4
 623          #define DISPLAY_COM3 P2_4
 624          #define DISPLAY_COM2 P1_4
 625          #define DISPLAY_COM4 P1_5
 626          #define DISPLAY_COM5 P1_6
 627          
 628          
 629          void init_display()
 630          {
 631   1        P2M0=GPIO_Out_PP;
 632   1        P2M1=GPIO_Out_PP;
 633   1        P2M2=GPIO_Out_PP;
 634   1        P2M3=GPIO_Out_PP;
 635   1        
 636   1        P3M4=GPIO_Out_PP;
 637   1        P2M4=GPIO_Out_PP;
 638   1        P1M4=GPIO_Out_PP;
 639   1        P1M5=GPIO_Out_PP;
 640   1        P1M6=GPIO_Out_PP;
 641   1      
 642   1        //display_off();
 643   1        DISPLAY_A=0;
 644   1        DISPLAY_B=0;
 645   1        DISPLAY_C=0;
 646   1        DISPLAY_D=0;
 647   1      
 648   1        DISPLAY_COM1=1;
 649   1        DISPLAY_COM2=1;
 650   1        DISPLAY_COM3=1;
 651   1        DISPLAY_COM4=1;
 652   1        DISPLAY_COM5=1;
 653   1      }
 654          void display_close()
 655          {
 656   1        DISPLAY_A=0;
 657   1        DISPLAY_B=0;
 658   1        DISPLAY_C=0;
 659   1        DISPLAY_D=0;
 660   1        DISPLAY_COM1=1;
 661   1        DISPLAY_COM2=1;
 662   1        DISPLAY_COM3=1;
 663   1        DISPLAY_COM4=1;
 664   1        DISPLAY_COM5=1;
 665   1      }
 666          void display_1(char c)
 667          {
 668   1        switch(c)
 669   1        {
 670   2          case 0:
 671   2            display_close();
 672   2            DISPLAY_A=1;
 673   2            DISPLAY_B=1;
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 12  

 674   2            DISPLAY_C=1;
 675   2            DISPLAY_D=1;
 676   2      
 677   2            DISPLAY_COM1=0;;
 678   2            Delay_ms(1);
 679   2            display_close();
 680   2            DISPLAY_A=1;
 681   2            DISPLAY_B=1;
 682   2            DISPLAY_C=0;
 683   2            DISPLAY_D=0;
 684   2      
 685   2            DISPLAY_COM5=0;
 686   2            Delay_ms(1);
 687   2            break;
 688   2          case 1:
 689   2            display_close();
 690   2            DISPLAY_A=0;
 691   2            DISPLAY_B=1;
 692   2            DISPLAY_C=1;
 693   2            DISPLAY_D=0;
 694   2      
 695   2            DISPLAY_COM1=0;
 696   2      
 697   2            Delay_ms(1);
 698   2            display_close();
 699   2            DISPLAY_A=0;
 700   2            DISPLAY_B=0;
 701   2            DISPLAY_C=0;
 702   2            DISPLAY_D=0;
 703   2      
 704   2            DISPLAY_COM5=0;
 705   2            Delay_ms(1);
 706   2            break;
 707   2          case 2:
 708   2            display_close();
 709   2            DISPLAY_A=1;
 710   2            DISPLAY_B=1;
 711   2            DISPLAY_C=0;
 712   2            DISPLAY_D=1;
 713   2      
 714   2            DISPLAY_COM1=0;
 715   2      
 716   2            Delay_ms(1);
 717   2            display_close();
 718   2            DISPLAY_A=1;
 719   2            DISPLAY_B=0;
 720   2            DISPLAY_C=1;
 721   2            DISPLAY_D=0;
 722   2      
 723   2            DISPLAY_COM5=0;
 724   2            Delay_ms(1);
 725   2            break;
 726   2          case 3:
 727   2            display_close();
 728   2            DISPLAY_A=1;
 729   2            DISPLAY_B=1;
 730   2            DISPLAY_C=1;
 731   2            DISPLAY_D=1;
 732   2      
 733   2            DISPLAY_COM1=0;
 734   2      
 735   2            Delay_ms(1);
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 13  

 736   2            display_close();
 737   2            DISPLAY_A=0;
 738   2            DISPLAY_B=0;
 739   2            DISPLAY_C=1;
 740   2            DISPLAY_D=0;
 741   2      
 742   2            DISPLAY_COM5=0;
 743   2            Delay_ms(1);
 744   2            break;
 745   2          case 4:
 746   2            display_close();
 747   2            DISPLAY_A=0;
 748   2            DISPLAY_B=1;
 749   2            DISPLAY_C=1;
 750   2            DISPLAY_D=0;
 751   2      
 752   2            DISPLAY_COM1=0;
 753   2      
 754   2            Delay_ms(1);
 755   2            display_close();
 756   2            DISPLAY_A=0;
 757   2            DISPLAY_B=1;
 758   2            DISPLAY_C=1;
 759   2            DISPLAY_D=0;
 760   2      
 761   2            DISPLAY_COM5=0;
 762   2            Delay_ms(1);
 763   2            break;
 764   2          case 5:
 765   2            display_close();
 766   2            DISPLAY_A=1;
 767   2            DISPLAY_B=0;
 768   2            DISPLAY_C=1;
 769   2            DISPLAY_D=1;
 770   2      
 771   2            DISPLAY_COM1=0;
 772   2      
 773   2            Delay_ms(1);
 774   2            display_close();
 775   2            DISPLAY_A=0;
 776   2            DISPLAY_B=1;
 777   2            DISPLAY_C=1;
 778   2            DISPLAY_D=0;
 779   2      
 780   2            DISPLAY_COM5=0;
 781   2            Delay_ms(1);
 782   2            break;
 783   2          case 6:
 784   2            display_close();
 785   2            DISPLAY_A=1;
 786   2            DISPLAY_B=0;
 787   2            DISPLAY_C=1;
 788   2            DISPLAY_D=1;
 789   2      
 790   2            DISPLAY_COM1=0;
 791   2      
 792   2            Delay_ms(1);
 793   2            display_close();
 794   2            DISPLAY_A=1;
 795   2            DISPLAY_B=1;
 796   2            DISPLAY_C=1;
 797   2            DISPLAY_D=0;
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 14  

 798   2      
 799   2            DISPLAY_COM5=0;
 800   2            Delay_ms(1);
 801   2            break;
 802   2          case 7:
 803   2            display_close();
 804   2            DISPLAY_A=1;
 805   2            DISPLAY_B=1;
 806   2            DISPLAY_C=1;
 807   2            DISPLAY_D=0;
 808   2      
 809   2            DISPLAY_COM1=0;
 810   2      
 811   2            Delay_ms(1);
 812   2            display_close();
 813   2            DISPLAY_A=0;
 814   2            DISPLAY_B=0;
 815   2            DISPLAY_C=0;
 816   2            DISPLAY_D=0;
 817   2      
 818   2            DISPLAY_COM5=0;
 819   2            Delay_ms(1);
 820   2            break;
 821   2          case 8:
 822   2            display_close();
 823   2            DISPLAY_A=1;
 824   2            DISPLAY_B=1;
 825   2            DISPLAY_C=1;
 826   2            DISPLAY_D=1;
 827   2      
 828   2            DISPLAY_COM1=0;
 829   2      
 830   2            Delay_ms(1);
 831   2            display_close();
 832   2            DISPLAY_A=1;
 833   2            DISPLAY_B=1;
 834   2            DISPLAY_C=1;
 835   2            DISPLAY_D=0;
 836   2      
 837   2            DISPLAY_COM5=0;
 838   2            Delay_ms(1);
 839   2            break;
 840   2          case 9:
 841   2            display_close();
 842   2            DISPLAY_A=1;
 843   2            DISPLAY_B=1;
 844   2            DISPLAY_C=1;
 845   2            DISPLAY_D=1;
 846   2      
 847   2            DISPLAY_COM1=0;
 848   2      
 849   2            Delay_ms(1);
 850   2            display_close();
 851   2            DISPLAY_A=0;
 852   2            DISPLAY_B=1;
 853   2            DISPLAY_C=1;
 854   2            DISPLAY_D=0;
 855   2      
 856   2            DISPLAY_COM5=0;
 857   2            Delay_ms(1);
 858   2          break;
 859   2      
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 15  

 860   2          default:
 861   2            display_close();
 862   2            Delay_ms(2);
 863   2          break;
 864   2        }
 865   1      }
 866          void display_2(char c)
 867          {
 868   1        switch(c)
 869   1        {
 870   2          case 0:
 871   2            display_close();
 872   2            DISPLAY_A=1;
 873   2            DISPLAY_B=1;
 874   2            DISPLAY_C=1;
 875   2            DISPLAY_D=1;
 876   2      
 877   2            DISPLAY_COM3=0;
 878   2            Delay_ms(1);
 879   2            display_close();
 880   2            DISPLAY_A=1;
 881   2            DISPLAY_B=1;
 882   2            DISPLAY_C=0;
 883   2            DISPLAY_D=0;
 884   2      
 885   2            DISPLAY_COM4=0;
 886   2            Delay_ms(1);
 887   2            break;
 888   2          case 1:
 889   2            display_close();
 890   2            DISPLAY_A=0;
 891   2            DISPLAY_B=1;
 892   2            DISPLAY_C=1;
 893   2            DISPLAY_D=0;
 894   2      
 895   2            DISPLAY_COM3=0;
 896   2      
 897   2            Delay_ms(1);
 898   2            display_close();
 899   2            DISPLAY_A=0;
 900   2            DISPLAY_B=0;
 901   2            DISPLAY_C=0;
 902   2            DISPLAY_D=0;
 903   2      
 904   2            DISPLAY_COM4=0;
 905   2            Delay_ms(1);
 906   2            break;
 907   2          case 2:
 908   2            display_close();
 909   2            DISPLAY_A=1;
 910   2            DISPLAY_B=1;
 911   2            DISPLAY_C=0;
 912   2            DISPLAY_D=1;
 913   2      
 914   2            DISPLAY_COM3=0;
 915   2      
 916   2            Delay_ms(1);
 917   2            display_close();
 918   2            DISPLAY_A=1;
 919   2            DISPLAY_B=0;
 920   2            DISPLAY_C=1;
 921   2            DISPLAY_D=0;
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 16  

 922   2      
 923   2            DISPLAY_COM4=0;
 924   2            Delay_ms(1);
 925   2            break;
 926   2          case 3:
 927   2            display_close();
 928   2            DISPLAY_A=1;
 929   2            DISPLAY_B=1;
 930   2            DISPLAY_C=1;
 931   2            DISPLAY_D=1;
 932   2      
 933   2            DISPLAY_COM3=0;
 934   2      
 935   2            Delay_ms(1);
 936   2            display_close();
 937   2            DISPLAY_A=0;
 938   2            DISPLAY_B=0;
 939   2            DISPLAY_C=1;
 940   2            DISPLAY_D=0;
 941   2      
 942   2            DISPLAY_COM4=0;
 943   2            Delay_ms(1);
 944   2            break;
 945   2          case 4:
 946   2            display_close();
 947   2            DISPLAY_A=0;
 948   2            DISPLAY_B=1;
 949   2            DISPLAY_C=1;
 950   2            DISPLAY_D=0;
 951   2      
 952   2            DISPLAY_COM3=0;
 953   2      
 954   2            Delay_ms(1);
 955   2            display_close();
 956   2            DISPLAY_A=0;
 957   2            DISPLAY_B=1;
 958   2            DISPLAY_C=1;
 959   2            DISPLAY_D=0;
 960   2      
 961   2            DISPLAY_COM4=0;
 962   2            Delay_ms(1);
 963   2            break;
 964   2          case 5:
 965   2            display_close();
 966   2            DISPLAY_A=1;
 967   2            DISPLAY_B=0;
 968   2            DISPLAY_C=1;
 969   2            DISPLAY_D=1;
 970   2      
 971   2            DISPLAY_COM3=0;
 972   2      
 973   2            Delay_ms(1);
 974   2            display_close();
 975   2            DISPLAY_A=0;
 976   2            DISPLAY_B=1;
 977   2            DISPLAY_C=1;
 978   2            DISPLAY_D=0;
 979   2      
 980   2            DISPLAY_COM4=0;
 981   2            Delay_ms(1);
 982   2            break;
 983   2          case 6:
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 17  

 984   2            display_close();
 985   2            DISPLAY_A=1;
 986   2            DISPLAY_B=0;
 987   2            DISPLAY_C=1;
 988   2            DISPLAY_D=1;
 989   2      
 990   2            DISPLAY_COM3=0;
 991   2      
 992   2            Delay_ms(1);
 993   2            display_close();
 994   2            DISPLAY_A=1;
 995   2            DISPLAY_B=1;
 996   2            DISPLAY_C=1;
 997   2            DISPLAY_D=0;
 998   2      
 999   2            DISPLAY_COM4=0;
1000   2            Delay_ms(1);
1001   2            break;
1002   2          case 7:
1003   2            display_close();
1004   2            DISPLAY_A=1;
1005   2            DISPLAY_B=1;
1006   2            DISPLAY_C=1;
1007   2            DISPLAY_D=0;
1008   2      
1009   2            DISPLAY_COM3=0;
1010   2      
1011   2            Delay_ms(1);
1012   2            display_close();
1013   2            DISPLAY_A=0;
1014   2            DISPLAY_B=0;
1015   2            DISPLAY_C=0;
1016   2            DISPLAY_D=0;
1017   2      
1018   2            DISPLAY_COM4=0;
1019   2            Delay_ms(1);
1020   2            break;
1021   2          case 8:
1022   2            display_close();
1023   2            DISPLAY_A=1;
1024   2            DISPLAY_B=1;
1025   2            DISPLAY_C=1;
1026   2            DISPLAY_D=1;
1027   2      
1028   2            DISPLAY_COM3=0;
1029   2      
1030   2            Delay_ms(1);
1031   2            display_close();
1032   2            DISPLAY_A=1;
1033   2            DISPLAY_B=1;
1034   2            DISPLAY_C=1;
1035   2            DISPLAY_D=0;
1036   2      
1037   2            DISPLAY_COM4=0;
1038   2            Delay_ms(1);
1039   2            break;
1040   2          case 9:
1041   2            display_close();
1042   2            DISPLAY_A=1;
1043   2            DISPLAY_B=1;
1044   2            DISPLAY_C=1;
1045   2            DISPLAY_D=1;
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 18  

1046   2      
1047   2            DISPLAY_COM3=0;
1048   2      
1049   2            Delay_ms(1);
1050   2            display_close();
1051   2            DISPLAY_A=0;
1052   2            DISPLAY_B=1;
1053   2            DISPLAY_C=1;
1054   2            DISPLAY_D=0;
1055   2      
1056   2            DISPLAY_COM4=0;
1057   2            Delay_ms(1);
1058   2          break;
1059   2      
1060   2          default:
1061   2            display_close();
1062   2            Delay_ms(2);
1063   2          break;
1064   2        }
1065   1      }
1066          void display_point_(char c)
1067          {
1068   1        if(c)
1069   1        {
1070   2          display_close();
1071   2          DISPLAY_D=1;
1072   2          DISPLAY_COM5=0;
1073   2          Delay_ms(1);
1074   2          display_close();
1075   2        }
1076   1        else
1077   1        {
1078   2          display_close();
1079   2          Delay_ms(1);
1080   2        }
1081   1      }
1082          void display_uv_(char c)
1083          {
1084   1        if(c)
1085   1        {
1086   2          display_close();
1087   2          DISPLAY_A=1;
1088   2          DISPLAY_COM2=0;
1089   2          Delay_ms(1);
1090   2          display_close();
1091   2        }
1092   1        else
1093   1        {
1094   2          display_close();
1095   2          Delay_ms(1);
1096   2        }
1097   1      }
1098          void display_touch_(char c)
1099          {
1100   1        if(c)
1101   1        {
1102   2          display_close();
1103   2          DISPLAY_D=1;
1104   2          DISPLAY_COM4=0;
1105   2          Delay_ms(1);
1106   2          display_close();
1107   2        }
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 19  

1108   1        else
1109   1        {
1110   2          display_close();
1111   2          Delay_ms(1);
1112   2        }
1113   1      }
1114          void display_flash()
1115          {
1116   1        display_1(display_data1);
1117   1        display_2(display_data2);
1118   1        display_point_(display_point);
1119   1        display_uv_(display_uv);
1120   1        display_touch_(display_touch_led);
1121   1      }
1122          
1123          void  buzzer()
1124          {
1125   1        static char inited=0;
1126   1        int i=0;
1127   1        if(inited==0)
1128   1        {
1129   2          P0M3 = 0xC2;                        //P03设置为推挽输出
1130   2          PWM3_MAP = 0x03;          //PWM3映射P03口
1131   2          PWM3P = 0x20;           //PWM周期为0xFF
1132   2          PWM3D = 0x10;           //PWM占空比设置
1133   2          PWM3C = 0x97;             //使能PWM3，关闭中断，允许输出，时钟4分频
1134   2          inited=1;
1135   2        } 
1136   1        PWM3C = 0x97; 
1137   1        Delay_ms(200);
1138   1        PWM3C = 0x07;
1139   1        
1140   1        
1141   1      }
1142          
1143          //void init
1144          /*********************************END OF FILE************************************/
1145          
1146          
1147          
1148          
1149          
1150          
1151          
1152          
1153          
1154          
1155          
1156          
1157          
1158          
1159          
1160          
1161          
1162          
1163          
1164          
1165          
1166          
1167          
1168          
1169          
C51 COMPILER V9.56.0.0   MAIN                                                              10/29/2020 20:54:42 PAGE 20  

1170          
1171          
1172          
1173          
1174          
1175          
1176          
1177          
1178          
1179          
1180          
1181          
1182          
1183          
1184          
1185          
1186          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3180    ----
   CONSTANT SIZE    =      2    ----
   XDATA SIZE       =     38    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     62       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
