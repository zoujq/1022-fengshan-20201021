C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\Main.obj
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE ..\..\User\Main.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Application;..
                    -\..\User\INC;..\..\Libraries;..\..\User\pt_os) DEBUG PRINT(.\List\Main.lst) TABS(2) OBJECT(.\Output\Main.obj)

line level    source

   1          //================================================================================
   2          #define  ALLOCATE_EXTERN
   3          #include "YX23F01CB.h"
   4          #include "YX23F01CB_SYS.h"
   5          #include "YX23F01CB_IO_INIT.h"
   6          #include "YX23F01CB_GeneralKey_Touch_Lib_V1.04\YX23F01CB_GeneralKey_Touch_Lib.h"
   7          #include "YX23F01CB_GeneralKey_Touch_Lib_V1.04\YX23F01CB_GeneralKey_Touch_Filter.h"
   8          #include "YX23F01CB_GeneralKey_Touch_Lib_V1.04\YX23F01CB_GeneralKey_Touch_Multibutton.h"
   9          #include "YX23F01CB_TouchUartDebug_Lib_V1.00\YX23F01CB_TouchUartDebug_Lib_CFG.h"
  10          #include "YX23F01CB_TouchUartDebug_Lib_V1.00\YX23F01CB_TouchUartDebug_Lib.h"
  11          #include "delay.h"
  12          #include <stdio.h>
  13          
  14          #define TK1 1<<15
  15          #define TK2 1<<14
  16          #define TK3 1<<13
  17          #define TK4 1<<12
  18          #define TK5 1<<11
  19          
  20          
  21          extern void init_printf();
  22          void init_ntc_adc();
  23          void init_display();
  24          unsigned int get_ntc_adc();
  25          void  buzzer(char type);
  26          u16 get_temp();
  27          void init_TIMER0();
  28          void key_check();
  29          void display_flash();
  30          //================================================================================
  31          
  32          char display_data1='X';
  33          char display_data2='X';
  34          char display_point=0;
  35          char display_uv_led=0;
  36          char display_touch_led=0;
  37          
  38          
  39          char dingshi_start=0;
  40          u32 dingshi_counter=0;
  41          char uv_start=0;
  42          u32 uv_counter=0;
  43          char work_mode=0;
  44          char last_hoted=0;
  45          u32 nec_jian_ge=0;
  46          u32 op_over_count=0;
  47          
  48          char feng_gan_stop_flag=0;
  49          u32 fan_delay_counter=0;
  50          
  51          
  52          
  53          //================================================================================
  54          
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 2   

  55          void set_dingshi_time_plus()
  56          {
  57   1        dingshi_counter+=30;
  58   1        if(dingshi_counter>6*60)
  59   1        {
  60   2          dingshi_counter=30;
  61   2        }
  62   1      }
  63          
  64          void set_dingshi_time_add()
  65          {
  66   1        dingshi_counter+=30;
  67   1        if(dingshi_counter>6*60)
  68   1        {
  69   2          dingshi_counter=6*60;
  70   2        }
  71   1      }
  72          void set_dingshi_time_red()
  73          {
  74   1        if(dingshi_counter>30)
  75   1        {
  76   2          dingshi_counter-=30;
  77   2        }
  78   1        else
  79   1        {
  80   2          dingshi_counter=30;
  81   2        }
  82   1      }
  83          
  84          void display_dingshi_set()
  85          {
  86   1        display_data1=dingshi_counter/60;
  87   1        display_data2=(dingshi_counter)%60;
  88   1        if(display_data2>30)
  89   1        {
  90   2          display_data1+=1;
  91   2          display_data2=0;
  92   2        }
  93   1        else if(display_data2>0)
  94   1        {
  95   2          display_data2=5;
  96   2        }
  97   1        else
  98   1        {
  99   2          display_data2=0;
 100   2        }
 101   1        display_point=1;
 102   1      }
 103          
 104          
 105          void display_dingshi_time()
 106          {
 107   1        static u16 i6=0;
 108   1        display_data1=dingshi_counter/60;
 109   1        display_data2=(dingshi_counter)%60;
 110   1        if(display_data2>30)
 111   1        {
 112   2          display_data1+=1;
 113   2          display_data2=0;
 114   2        }
 115   1        else if(display_data2>0)
 116   1        {
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 3   

 117   2          display_data2=5;
 118   2        }
 119   1        else
 120   1        {
 121   2          display_data2=0;
 122   2        }
 123   1        
 124   1        if(i6==1)
 125   1        {
 126   2          display_point=1;
 127   2        } 
 128   1        else if(i6==50)
 129   1        {         
 130   2          display_point=0;          
 131   2        }
 132   1        else if(i6==100)
 133   1        {
 134   2          i6=0;
 135   2        }
 136   1        i6++;
 137   1      }
 138          void display_uv_time()
 139          {
 140   1        display_data1=uv_counter/10;
 141   1        display_data2=uv_counter%10;
 142   1        display_point=0;  
 143   1        
 144   1      }
 145          
 146          void display_off()
 147          {
 148   1        display_data1='X';
 149   1        display_data2='X';
 150   1        display_point=0;
 151   1      }
 152          
 153          void display_none()
 154          {
 155   1        display_data1='+';
 156   1        display_data2='+';
 157   1        display_point=0;
 158   1      }
 159          void key_check()
 160          {
 161   1        static u16 ON_TK=0;
 162   1        if(TouchKeyFlag )
 163   1        {   
 164   2          if(ON_TK==0)
 165   2          {
 166   3            ON_TK=1;
 167   3            buzzer(1);
 168   3            if(work_mode==0)
 169   3            {
 170   4              work_mode=1;        
 171   4              dingshi_counter=90;
 172   4            }
 173   3            else
 174   3            {
 175   4      
 176   4              if(dingshi_start==1 || uv_start==1)
 177   4              {
 178   5                work_mode=0;
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 4   

 179   5                dingshi_counter=0;
 180   5                dingshi_start=0;
 181   5                uv_start=0;
 182   5                uv_counter=0;
 183   5      
 184   5              }
 185   4              else
 186   4              {
 187   5                if(uv_counter==0)
 188   5                {
 189   6                  set_dingshi_time_plus();  
 190   6                  display_dingshi_set();    
 191   6                }           
 192   5              }
 193   4            }
 194   3            op_over_count=0;
 195   3          }
 196   2          
 197   2        }
 198   1        else
 199   1        {
 200   2          ON_TK=0;
 201   2        }
 202   1      
 203   1      }
 204          #define FAN P1_1
 205          #define UV P0_7
 206          #define JIARE P0_3
 207          #define LED1_UV P1_2 
 208          #define LED2_TOUCH P1_3 
 209          
 210          void work_check()
 211          {
 212   1        static char inited=0;
 213   1        static u16 count02=0;
 214   1        if(inited==0)
 215   1        {
 216   2          P1M1=GPIO_Out_PP;//fan
 217   2          P0M7=GPIO_Out_PP;//vu
 218   2          P0M3=GPIO_Out_PP;//jiare
 219   2          P1M2=GPIO_Out_PP;//LED uv 
 220   2          P1M3=GPIO_Out_PP;//LED2_TOUCH
 221   2          
 222   2          inited=1;
 223   2        }
 224   1        
 225   1        if(work_mode==0)
 226   1        {
 227   2          static u16 i5=0;
 228   2              
 229   2          if(i5==1)
 230   2          {
 231   3            display_touch_led=0x01;
 232   3          } 
 233   2          else if(i5==60)
 234   2          {         
 235   3            display_touch_led=0x00;         
 236   3          }
 237   2          else if(i5==120)
 238   2          {
 239   3            i5=0;
 240   3          }
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 5   

 241   2          i5++;
 242   2          
 243   2          op_over_count=0;  
 244   2          display_uv_led=0;
 245   2          display_off();    
 246   2          FAN=0;
 247   2          JIARE=0;
 248   2          UV=0;
 249   2          dingshi_counter=0;
 250   2          dingshi_start=0;
 251   2          uv_start=0;
 252   2          uv_counter=0;
 253   2          
 254   2        }
 255   1        else
 256   1        {
 257   2          display_touch_led=1;
 258   2          if(op_over_count<300)
 259   2          {     
 260   3            op_over_count++;
 261   3            FAN=0;
 262   3            JIARE=0;
 263   3            UV=0;
 264   3            dingshi_start=0;
 265   3            uv_start=0;
 266   3            if(op_over_count==1 || op_over_count==100 || op_over_count==200 )
 267   3            {       
 268   4                if(dingshi_counter>0)
 269   4                {
 270   5                  display_dingshi_set();
 271   5                }           
 272   4                else
 273   4                {
 274   5                  display_uv_time();
 275   5                }
 276   4            }
 277   3            else if(op_over_count==50 || op_over_count==150 || op_over_count==250)
 278   3            {
 279   4              display_none();
 280   4            }
 281   3            if(op_over_count==300)
 282   3            {
 283   4                buzzer(2);
 284   4                if(dingshi_counter>0)
 285   4                {
 286   5                  display_dingshi_set();
 287   5                  dingshi_start=1;
 288   5                }           
 289   4                else
 290   4                {
 291   5                  display_uv_time();
 292   5                  uv_start=1;
 293   5                }
 294   4            }
 295   3          
 296   3            
 297   3          }
 298   2          else
 299   2          {
 300   3            if(dingshi_counter>0)
 301   3            {
 302   4              FAN=1;
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 6   

 303   4              JIARE=1;
 304   4              display_dingshi_time();
 305   4            }
 306   3            else
 307   3            {
 308   4              FAN=0;
 309   4              JIARE=0;
 310   4            }
 311   3            if(feng_gan_stop_flag==1)
 312   3            {
 313   4              uv_start=1;
 314   4              uv_counter=20;
 315   4              feng_gan_stop_flag=0;
 316   4              fan_delay_counter=10;
 317   4            }
 318   3            if(uv_counter>0)
 319   3            {
 320   4              if(fan_delay_counter>0)
 321   4              {
 322   5                static u16 i51=0;
 323   5                UV=0;
 324   5                if(i51==1)
 325   5                {
 326   6                  display_uv_led=0x01;
 327   6                } 
 328   5                else if(i51==60)
 329   5                {         
 330   6                  display_uv_led=0x00;          
 331   6                }
 332   5                else if(i51==120)
 333   5                {
 334   6                  i51=0;
 335   6                }
 336   5                i51++;          
 337   5              }
 338   4              else
 339   4              {
 340   5                UV=1;
 341   5                display_uv_led=1;
 342   5              }
 343   4              
 344   4              display_uv_time();
 345   4            }
 346   3            else
 347   3            {
 348   4              UV=0;
 349   4              display_uv_led=0;
 350   4            }
 351   3            
 352   3          }   
 353   2          
 354   2        }
 355   1        if(last_hoted!=dingshi_start)
 356   1        {
 357   2          if(last_hoted==1 && dingshi_start==0)
 358   2          {
 359   3            fan_delay_counter=15700;
 360   3            last_hoted=dingshi_start;
 361   3          }
 362   2          else
 363   2          {
 364   3            last_hoted=dingshi_start;
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 7   

 365   3          }
 366   2        }
 367   1        if(fan_delay_counter>0)
 368   1        {
 369   2          fan_delay_counter--;
 370   2          FAN=1;
 371   2        }
 372   1        
 373   1      }
*** WARNING C280 IN LINE 213 OF ..\..\User\Main.c: 'count02': unreferenced local variable
 374          
 375          
 376          /***********************************红外解码**************************************/
 377          u8 c_timer=0; 
 378          u8 c_end_flag=0;
 379          u8 c_start_flag=0;
 380          xdata u8 nec_buff[34];
 381          u8 nec_index=0;
 382          xdata u8 nec_data[4];
 383          void init_TIMER0()
 384          {
 385   1        TCON1 = 0x00;           //
 386   1        TMOD = 0x00;            //
 387   1        
 388   1        TH0 = 0xFF;
 389   1        TL0 = 0x7B;             //100us
 390   1        IE |= 0x02;             //
 391   1        TCON |= 0x10;           //
 392   1          
 393   1      }
 394          
 395          void TIMER0_Rpt(void) interrupt TIMER0_VECTOR  //时基100us
 396          {
 397   1        static u32 tt=0;
 398   1      
 399   1        c_timer++;
 400   1        if(c_timer>150)
 401   1        {
 402   2          c_end_flag=1;
 403   2          c_timer=0;
 404   2        }
 405   1        if(tt++>600000)
 406   1        {
 407   2          tt=0;
 408   2          if(work_mode==1)    
 409   2          {     
 410   3            if(dingshi_counter>0)
 411   3            {
 412   4              if(dingshi_start==1)
 413   4              {
 414   5                dingshi_counter--;  
 415   5                if(dingshi_counter==0)
 416   5                {
 417   6                  feng_gan_stop_flag=1;
 418   6                  dingshi_start=0;
 419   6                }
 420   5              }
 421   4              
 422   4            }
 423   3            if(uv_counter>0)
 424   3            {
 425   4              if(uv_start==1 && fan_delay_counter==0)
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 8   

 426   4              {
 427   5                uv_counter--;
 428   5                if(uv_counter==0)
 429   5                {
 430   6                  uv_start=0;
 431   6                  work_mode=0;
 432   6                  buzzer(3);
 433   6                }
 434   5              }
 435   4            }
 436   3          }   
 437   2        }
 438   1        nec_jian_ge++;
 439   1      } 
 440          void init_exti0()
 441          {
 442   1        P3M5 = 0x69;            //P35设置为带SMT上拉输入
 443   1        PITS4 = 0x04;         //INT17下降沿  
 444   1        PINTE2 = 0x02;
 445   1        IE2 |= 0x01;              //打开INT17中断
 446   1        
 447   1      }
 448          
 449          void ISR_INT16_17(void)  interrupt INT16_17_VECTOR
 450          {
 451   1        PINTF2 &=~ 0x02;        //清除INT17中断标志位    
 452   1      
 453   1          if(c_timer>50)
 454   1          {
 455   2            nec_index=0;
 456   2          }
 457   1          nec_buff[nec_index]=c_timer;
 458   1          c_timer=0;
 459   1          nec_index++;
 460   1          if(nec_index>33)
 461   1          {
 462   2            nec_index=0;
 463   2          }
 464   1          c_end_flag=0;
 465   1          c_timer=0;
 466   1      
 467   1      }
 468          void chu_li_nec()
 469          {
 470   1        if(nec_data[0]==0 && nec_data[1]==0xff)
 471   1        {
 472   2          if(nec_jian_ge<3000)
 473   2          {
 474   3            return;
 475   3          }
 476   2          nec_jian_ge=0;
 477   2          if(nec_data[2]==0)
 478   2          {
 479   3            buzzer(1);
 480   3            if(work_mode==0)
 481   3            {
 482   4              work_mode=1;
 483   4              dingshi_counter=90;
 484   4            }
 485   3            else
 486   3            {
 487   4              work_mode=0;
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 9   

 488   4              dingshi_counter=0;
 489   4              dingshi_start=0;
 490   4              uv_start=0;
 491   4              uv_counter=0;
 492   4            }
 493   3          }
 494   2          else if(work_mode==1 && uv_counter==0)
 495   2          {
 496   3            buzzer(1);
 497   3            if(uv_counter==0)
 498   3            {
 499   4              if(nec_data[2]==0x08)//
 500   4              {
 501   5                          
 502   5                set_dingshi_time_add();       
 503   5                op_over_count=0;
 504   5              }
 505   4              else if(nec_data[2]==0x0A)//
 506   4              {
 507   5                  
 508   5                set_dingshi_time_red();       
 509   5                op_over_count=0;
 510   5              }
 511   4            }
 512   3            
 513   3          }
 514   2          if(nec_data[2]==0x02)//uv
 515   2          {
 516   3            buzzer(1);
 517   3            if(uv_start==0)
 518   3            {
 519   4              work_mode=1;
 520   4              uv_start=0;
 521   4              uv_counter=20;
 522   4              dingshi_counter=0;
 523   4              dingshi_start=0;
 524   4              op_over_count=0;
 525   4            }
 526   3            else
 527   3            {         
 528   4              work_mode=0;
 529   4              dingshi_counter=0;
 530   4              dingshi_start=0;
 531   4              uv_start=0;
 532   4              uv_counter=0;
 533   4            }
 534   3              
 535   3          }
 536   2        }
 537   1        
 538   1      }
 539          extern char putchar (char c);
 540          void decode_nec()
 541          {
 542   1        if(nec_index && c_end_flag)
 543   1        {
 544   2          nec_data[0]=(nec_buff[1]<0x0F ? 0 : 1)<<0 |
 545   2                (nec_buff[2]<0x0F ? 0 : 1)<<1 |
 546   2                (nec_buff[3]<0x0F ? 0 : 1)<<2 |
 547   2                (nec_buff[4]<0x0F ? 0 : 1)<<3 |
 548   2                (nec_buff[5]<0x0F ? 0 : 1)<<4 |
 549   2                (nec_buff[6]<0x0F ? 0 : 1)<<5 |
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 10  

 550   2                (nec_buff[7]<0x0F ? 0 : 1)<<6 |
 551   2                (nec_buff[8]<0x0F ? 0 : 1)<<7 ;
 552   2          nec_data[1]=(nec_buff[9]<0x0F ? 0 : 1)<<0 |
 553   2                (nec_buff[10]<0x0F ? 0 : 1)<<1 |
 554   2                (nec_buff[11]<0x0F ? 0 : 1)<<2 |
 555   2                (nec_buff[12]<0x0F ? 0 : 1)<<3 |
 556   2                (nec_buff[13]<0x0F ? 0 : 1)<<4 |
 557   2                (nec_buff[14]<0x0F ? 0 : 1)<<5 |
 558   2                (nec_buff[15]<0x0F ? 0 : 1)<<6 |
 559   2                (nec_buff[16]<0x0F ? 0 : 1)<<7 ;
 560   2          nec_data[2]=(nec_buff[17]<0x0F ? 0 : 1)<<0 |
 561   2                (nec_buff[18]<0x0F ? 0 : 1)<<1 |
 562   2                (nec_buff[19]<0x0F ? 0 : 1)<<2 |
 563   2                (nec_buff[20]<0x0F ? 0 : 1)<<3 |
 564   2                (nec_buff[21]<0x0F ? 0 : 1)<<4 |
 565   2                (nec_buff[22]<0x0F ? 0 : 1)<<5 |
 566   2                (nec_buff[23]<0x0F ? 0 : 1)<<6 |
 567   2                (nec_buff[24]<0x0F ? 0 : 1)<<7 ;
 568   2          nec_data[3]=(nec_buff[25]<0x0F ? 0 : 1)<<0 |
 569   2                (nec_buff[26]<0x0F ? 0 : 1)<<1 |
 570   2                (nec_buff[27]<0x0F ? 0 : 1)<<2 |
 571   2                (nec_buff[28]<0x0F ? 0 : 1)<<3 |
 572   2                (nec_buff[29]<0x0F ? 0 : 1)<<4 |
 573   2                (nec_buff[30]<0x0F ? 0 : 1)<<5 |
 574   2                (nec_buff[31]<0x0F ? 0 : 1)<<6 |
 575   2                (nec_buff[32]<0x0F ? 0 : 1)<<7 ;
 576   2            nec_index=0;
 577   2            chu_li_nec();
 578   2      
 579   2          
 580   2          
 581   2      //    putchar(0x56);
 582   2      //    putchar(nec_data[0]);
 583   2      //    putchar(nec_data[1]);
 584   2      //    putchar(nec_data[2]);
 585   2      //    putchar(nec_data[3]);
 586   2          
 587   2          {
 588   3            int i=0;
 589   3            for(i=0;i<33;i++)
 590   3            {
 591   4              nec_buff[i]=0;
 592   4            }
 593   3            
 594   3          }
 595   2      
 596   2        }
 597   1      }
 598          
 599          
 600          
 601          
 602          
 603          
 604          
 605          /*************************************ADC************************************************/
 606          
 607          
 608          /***************************************************************************/
 609          //
 610          //#define DISPLAY_A P2_5  P2_1
 611          //#define DISPLAY_B P2_4  P3_4
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 11  

 612          //#define DISPLAY_C P2_2  P1_4
 613          //#define DISPLAY_D P2_3  P2_4
 614          //#define DISPLAY_E P2_1  P2_5
 615          //#define DISPLAY_F P1_4  P2_2
 616          //#define DISPLAY_G P3_4  P2_3
 617          
 618          #define DISPLAY_A  P2_1
 619          #define DISPLAY_B  P3_4
 620          #define DISPLAY_C  P2_4
 621          #define DISPLAY_D  P2_5
 622          #define DISPLAY_E  P0_2
 623          #define DISPLAY_F  P2_2
 624          #define DISPLAY_G  P2_3
 625          #define DISPLAY_DP P2_0//P2_0//  printf("%s\n", );
 626          
 627          //
 628          #define DISPLAY_COM1 P1_6
 629          #define DISPLAY_COM2 P1_5
 630          
 631          
 632          
 633          void init_display()
 634          {
 635   1        P2M1=GPIO_Out_PP;
 636   1        P3M4=GPIO_Out_PP;
 637   1        P2M4=GPIO_Out_PP;
 638   1        P2M5=GPIO_Out_PP;
 639   1        P0M2=GPIO_Out_PP;
 640   1        P2M2=GPIO_Out_PP;
 641   1        P2M3=GPIO_Out_PP;
 642   1        P2M0=GPIO_Out_PP;
 643   1        
 644   1        P1M6=GPIO_Out_PP;
 645   1        P1M5=GPIO_Out_PP;
 646   1      
 647   1        //display_off();
 648   1        DISPLAY_A=0;
 649   1        DISPLAY_B=0;
 650   1        DISPLAY_C=0;
 651   1        DISPLAY_D=0;
 652   1        DISPLAY_E=0;
 653   1        DISPLAY_F=0;
 654   1        DISPLAY_G=0;
 655   1        DISPLAY_DP=0;
 656   1      
 657   1        DISPLAY_COM1=1;
 658   1        DISPLAY_COM2=1;
 659   1      
 660   1      }
 661          void display_close()
 662          {
 663   1        DISPLAY_A=0;
 664   1        DISPLAY_B=0;
 665   1        DISPLAY_C=0;
 666   1        DISPLAY_D=0;
 667   1        DISPLAY_E=0;
 668   1        DISPLAY_F=0;
 669   1        DISPLAY_G=0;
 670   1        DISPLAY_DP=0;
 671   1        DISPLAY_COM1=1;
 672   1        DISPLAY_COM2=1;
 673   1      
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 12  

 674   1      }
 675          
 676          
 677          void display_1(char c,char b)
 678          {
 679   1      //  display_point
 680   1        
 681   1        
 682   1        DISPLAY_COM1=1;
 683   1        DISPLAY_COM2=1;
 684   1        
 685   1        switch(c)
 686   1        {
 687   2          case 0:
 688   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=0;
 689   2            break;
 690   2          case 1:
 691   2            DISPLAY_A=0;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=0;
 692   2            break;
 693   2          case 2:
 694   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=0;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=0;  DISPLAY_G=1;
 695   2            break;
 696   2          case 3:
 697   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=1;
 698   2            break;
 699   2          case 4:
 700   2            DISPLAY_A=0;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=1;  DISPLAY_G=1;
 701   2            break;
 702   2          case 5:
 703   2            DISPLAY_A=1;  DISPLAY_B=0;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=0;  DISPLAY_F=1;  DISPLAY_G=1;
 704   2            break;
 705   2          case 6:
 706   2            DISPLAY_A=1;  DISPLAY_B=0;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=1;
 707   2            break;
 708   2          case 7:
 709   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=0;
 710   2            break;
 711   2          case 8:
 712   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=1;
 713   2            break;
 714   2          case 9:
 715   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=0;  DISPLAY_F=1;  DISPLAY_G=1;
 716   2            break;
 717   2          default:
 718   2            DISPLAY_A=0;  DISPLAY_B=0;  DISPLAY_C=0;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=0;
 719   2            break;
 720   2          
 721   2        }
 722   1        if(b==1)
 723   1        {
 724   2          DISPLAY_COM1=0;
 725   2          DISPLAY_COM2=1;
 726   2          if(display_point)
 727   2          {
 728   3              DISPLAY_DP=1;
 729   3          }
 730   2          else
 731   2          {
 732   3              DISPLAY_DP=0;
 733   3          }
 734   2        }
 735   1        else if(b==2)
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 13  

 736   1        {
 737   2          DISPLAY_COM1=1;
 738   2          DISPLAY_COM2=0;
 739   2          DISPLAY_DP=0;
 740   2        }
 741   1        
 742   1        
 743   1      }
 744          void display_uv_(char c)
 745          {
 746   1        if(c)
 747   1        {
 748   2          LED1_UV=1;
 749   2        }
 750   1        else
 751   1        {
 752   2          LED1_UV=0;
 753   2        }
 754   1      }
 755          void display_touch_(char c)
 756          {
 757   1        if(c)
 758   1        {
 759   2          LED2_TOUCH=1;
 760   2        }
 761   1        else
 762   1        {
 763   2          LED2_TOUCH=0;
 764   2        }
 765   1      }
 766          void display_flash()
 767          {
 768   1        display_1(display_data1,1);
 769   1        Delay_ms(4);
 770   1        display_1(display_data2,2);
 771   1        display_uv_(display_uv_led);
 772   1        display_touch_(display_touch_led);
 773   1      }
 774          
 775          void  buzzer(char type)
 776          {
 777   1        static int t0=0;
 778   1        
 779   1      
 780   1        if(type==1)
 781   1        { 
 782   2          P1M4 = 0xC2;                        //P03设置为推挽输出
 783   2          PWM3_MAP = 0x14;          //PWM3映射P03口
 784   2          PWM3P = 0x20;           //PWM周期为0xFF
 785   2          PWM3D = 0x10;           //PWM占空比设置
 786   2          PWM3C = 0x97;             //使能PWM3，关闭中断，允许输出，时钟4分频
 787   2          t0=10;
 788   2        }
 789   1        else if(type==2)
 790   1        {
 791   2          P1M4 = 0xC2;                        //P03设置为推挽输出
 792   2          PWM3_MAP = 0x14;          //PWM3映射P03口
 793   2          PWM3P = 0x20;           //PWM周期为0xFF
 794   2          PWM3D = 0x10;           //PWM占空比设置
 795   2          PWM3C = 0x97;             //使能PWM3，关闭中断，允许输出，时钟4分频
 796   2          t0=20;
 797   2        }
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 14  

 798   1        else if(type==3)
 799   1        {
 800   2          P1M4 = 0xC2;                        //P03设置为推挽输出
 801   2          PWM3_MAP = 0x14;          //PWM3映射P03口
 802   2          PWM3P = 0x20;           //PWM周期为0xFF
 803   2          PWM3D = 0x10;           //PWM占空比设置
 804   2          PWM3C = 0x97;             //使能PWM3，关闭中断，允许输出，时钟4分频
 805   2          t0=50;
 806   2        }
 807   1        if(t0>0)
 808   1        { 
 809   2          t0--;
 810   2          
 811   2          if(t0==0)
 812   2          {
 813   3            PWM3C = 0x07;
 814   3            P1M4=GPIO_In_AN;
 815   3          }
 816   2          
 817   2        }
 818   1        
 819   1        
 820   1      }
 821          
 822          //void init
 823          
 824          
 825          
 826          
 827          void main()
 828          {
 829   1        u32 ts=0;
 830   1        SystemInit();           //
 831   1        //init_printf();
 832   1        init_display();
 833   1        init_TIMER0();
 834   1        init_exti0();
 835   1        EA = 1;
 836   1        CTK_Init(); 
 837   1                    
 838   1        buzzer(3);
 839   1        //printf("start\n\r");  
 840   1        while(1)
 841   1        {
 842   2      
 843   2          if(OneCycleScanDone)
 844   2          {
 845   3            TouchRawDataFilter();   //
 846   3            Touch_Signal_Handle();
 847   3            TouchMultibuttonHandle(); //
 848   3            OneCycleScanDone = 0;
 849   3      
 850   3          }
 851   2          
 852   2            key_check();
 853   2          decode_nec();
 854   2          Delay_ms(4);
 855   2          display_flash();
 856   2          work_check();
 857   2          buzzer(0);
 858   2      
 859   2      //    if(ts++>200)
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 15  

 860   2      //    {
 861   2      //      ts=0;
 862   2      //      // char work_mode=0;
 863   2      //      // char dingshi_start=0;
 864   2      //      // u32 dingshi_counter=0;
 865   2      //      // char uv_start=0;
 866   2      //      // u32 uv_counter=0;
 867   2      //      
 868   2      //      // char last_hoted=0;
 869   2      //      // u32 op_over_count=0;
 870   2      
 871   2      //      // char feng_gan_stop_flag=0;
 872   2      //      // u32 fan_delay_counter=0;
 873   2      
 874   2      //      // putchar(work_mode);
 875   2      //      // putchar(dingshi_start);
 876   2      //      // putchar(dingshi_counter&0xff);
 877   2      //      // putchar(uv_start);
 878   2      //      // putchar(uv_counter&0xff);
 879   2      //      // putchar(last_hoted);
 880   2      //      // putchar(op_over_count&0xff);
 881   2      //      // putchar(feng_gan_stop_flag);
 882   2      //      // putchar(fan_delay_counter&0xff);
 883   2      //      // putchar('\n');
 884   2      
 885   2      //    }
 886   2      
 887   2        } 
 888   1      }
 889          
 890          
 891          /*********************************END OF FILE************************************/
 892          
 893          
 894          
 895          
 896          
 897          
 898          
 899          
 900          
 901          
 902          
 903          
 904          
 905          
 906          
 907          
 908          
 909          
 910          
 911          
 912          
 913          
 914          
 915          
 916          
 917          
 918          
 919          
 920          
 921          
C51 COMPILER V9.56.0.0   MAIN                                                              12/02/2020 23:23:08 PAGE 16  

 922          
 923          
 924          
 925          
 926          
 927          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3041    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     38    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     51       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
