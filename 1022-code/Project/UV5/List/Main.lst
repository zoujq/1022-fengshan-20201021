C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\Main.obj
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE ..\..\User\Main.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Application;..
                    -\..\User\INC;..\..\Libraries;..\..\User\pt_os) DEBUG PRINT(.\List\Main.lst) TABS(2) OBJECT(.\Output\Main.obj)

line level    source

   1          //================================================================================
   2          #define  ALLOCATE_EXTERN
   3          #include "YX23F01CB.h"
   4          #include "YX23F01CB_SYS.h"
   5          #include "YX23F01CB_IO_INIT.h"
   6          #include "YX23F01CB_GeneralKey_Touch_Lib_V1.04\YX23F01CB_GeneralKey_Touch_Lib.h"
   7          #include "YX23F01CB_GeneralKey_Touch_Lib_V1.04\YX23F01CB_GeneralKey_Touch_Filter.h"
   8          #include "YX23F01CB_GeneralKey_Touch_Lib_V1.04\YX23F01CB_GeneralKey_Touch_Multibutton.h"
   9          #include "YX23F01CB_TouchUartDebug_Lib_V1.00\YX23F01CB_TouchUartDebug_Lib_CFG.h"
  10          #include "YX23F01CB_TouchUartDebug_Lib_V1.00\YX23F01CB_TouchUartDebug_Lib.h"
  11          #include "delay.h"
  12          #include <stdio.h>
  13          
  14          #define TK1 1<<15
  15          #define TK2 1<<14
  16          #define TK3 1<<13
  17          #define TK4 1<<12
  18          #define TK5 1<<11
  19          
  20          
  21          extern void init_printf();
  22          void init_ntc_adc();
  23          void init_display();
  24          unsigned int get_ntc_adc();
  25          void  buzzer();
  26          u16 get_temp();
  27          void init_TIMER0();
  28          void key_check();
  29          void display_flash();
  30          //================================================================================
  31          
  32          char display_data1='X';
  33          char display_data2='X';
  34          char display_point=0;
  35          char display_uv_led=0;
  36          char display_touch_led=0;
  37          
  38          
  39          char dingshi_start=0;
  40          u32 dingshi_counter=0;
  41          char uv_start=0;
  42          u32 uv_counter=0;
  43          char work_mode=0;
  44          char last_hoted=0;
  45          u32 nec_jian_ge=0;
  46          u32 op_over_count=0;
  47          
  48          char feng_gan_stop_flag=0;
  49          u32 fan_delay_counter=0;
  50          u32 nec_ir_counter=0;
  51          
  52          
  53          
  54          //================================================================================
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 2   

  55          
  56          void set_dingshi_time_plus()
  57          {
  58   1        dingshi_counter+=30;
  59   1        if(dingshi_counter>6*60)
  60   1        {
  61   2          dingshi_counter=30;
  62   2        }
  63   1      }
  64          
  65          void set_dingshi_time_add()
  66          {
  67   1        dingshi_counter+=30;
  68   1        if(dingshi_counter>6*60)
  69   1        {
  70   2          dingshi_counter=6*60;
  71   2        }
  72   1      }
  73          void set_dingshi_time_red()
  74          {
  75   1        if(dingshi_counter>30)
  76   1        {
  77   2          dingshi_counter-=30;
  78   2        }
  79   1        else
  80   1        {
  81   2          dingshi_counter=30;
  82   2        }
  83   1      }
  84          
  85          void display_dingshi_set()
  86          {
  87   1        display_data1=dingshi_counter/60;
  88   1        display_data2=(dingshi_counter)%60;
  89   1        if(display_data2>30)
  90   1        {
  91   2          display_data1+=1;
  92   2          display_data2=0;
  93   2        }
  94   1        else if(display_data2>0)
  95   1        {
  96   2          display_data2=5;
  97   2        }
  98   1        else
  99   1        {
 100   2          display_data2=0;
 101   2        }
 102   1        display_point=1;
 103   1      }
 104          
 105          
 106          void display_dingshi_time()
 107          {
 108   1        static u16 i6=0;
 109   1        display_data1=dingshi_counter/60;
 110   1        display_data2=(dingshi_counter)%60;
 111   1        if(display_data2>30)
 112   1        {
 113   2          display_data1+=1;
 114   2          display_data2=0;
 115   2        }
 116   1        else if(display_data2>0)
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 3   

 117   1        {
 118   2          display_data2=5;
 119   2        }
 120   1        else
 121   1        {
 122   2          display_data2=0;
 123   2        }
 124   1        
 125   1        if(i6==1)
 126   1        {
 127   2          display_point=1;
 128   2        } 
 129   1        else if(i6==50)
 130   1        {         
 131   2          display_point=0;          
 132   2        }
 133   1        else if(i6==100)
 134   1        {
 135   2          i6=0;
 136   2        }
 137   1        i6++;
 138   1      }
 139          void display_uv_time()
 140          {
 141   1        display_data1=uv_counter/10;
 142   1        display_data2=uv_counter%10;
 143   1        display_point=0;  
 144   1        
 145   1      }
 146          
 147          void display_off()
 148          {
 149   1        display_data1='X';
 150   1        display_data2='X';
 151   1        display_point=0;
 152   1      }
 153          
 154          void display_none()
 155          {
 156   1        display_data1='+';
 157   1        display_data2='+';
 158   1        display_point=0;
 159   1      }
 160          void key_check()
 161          {
 162   1        static u16 ON_TK=0;
 163   1        if(TouchKeyFlag )
 164   1        {   
 165   2          if(ON_TK==0)
 166   2          {
 167   3            ON_TK=1;
 168   3            if(work_mode==0)
 169   3            {
 170   4              work_mode=1;        
 171   4              dingshi_counter=90;
 172   4            }
 173   3            else
 174   3            {
 175   4              if(dingshi_start==1 || uv_start==1)
 176   4              {
 177   5                work_mode=0;
 178   5                dingshi_counter=0;
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 4   

 179   5                dingshi_start=0;
 180   5                uv_start=0;
 181   5                uv_counter=0;
 182   5      
 183   5              }
 184   4              else
 185   4              {
 186   5                if(uv_counter==0)
 187   5                {
 188   6                  set_dingshi_time_plus();  
 189   6                  display_dingshi_set();    
 190   6                }           
 191   5              }
 192   4            }
 193   3            op_over_count=0;
 194   3          }
 195   2          
 196   2        }
 197   1        else
 198   1        {
 199   2          ON_TK=0;
 200   2        }
 201   1      
 202   1      }
 203          #define FAN P1_1
 204          #define UV P0_7
 205          #define JIARE P0_3
 206          #define LED1_UV P1_2 
 207          #define LED2_TOUCH P1_3 
 208          
 209          void work_check()
 210          {
 211   1        static char inited=0;
 212   1        static u16 count02=0;
 213   1        if(inited==0)
 214   1        {
 215   2          P1M1=GPIO_Out_PP;//fan
 216   2          P0M7=GPIO_Out_PP;//vu
 217   2          P0M3=GPIO_Out_PP;//jiare
 218   2          P1M2=GPIO_Out_PP;//LED uv 
 219   2          P1M3=GPIO_Out_PP;//LED2_TOUCH
 220   2          
 221   2          inited=1;
 222   2        }
 223   1        
 224   1        if(work_mode==0)
 225   1        {
 226   2          static u16 i5=0;
 227   2              
 228   2          if(i5==1)
 229   2          {
 230   3            display_touch_led=0x01;
 231   3          } 
 232   2          else if(i5==60)
 233   2          {         
 234   3            display_touch_led=0x00;         
 235   3          }
 236   2          else if(i5==120)
 237   2          {
 238   3            i5=0;
 239   3          }
 240   2          i5++;
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 5   

 241   2          
 242   2          op_over_count=0;  
 243   2          display_uv_led=0;
 244   2          display_off();    
 245   2          FAN=0;
 246   2          JIARE=0;
 247   2          UV=0;
 248   2          dingshi_counter=0;
 249   2          dingshi_start=0;
 250   2          uv_start=0;
 251   2          uv_counter=0;
 252   2          
 253   2        }
 254   1        else
 255   1        {
 256   2          display_touch_led=1;
 257   2          if(op_over_count<300)
 258   2          {     
 259   3            op_over_count++;
 260   3            FAN=0;
 261   3            JIARE=0;
 262   3            UV=0;
 263   3            dingshi_start=0;
 264   3            uv_start=0;
 265   3            if(op_over_count==1 || op_over_count==100 || op_over_count==200 )
 266   3            {       
 267   4                if(dingshi_counter>0)
 268   4                {
 269   5                  display_dingshi_set();
 270   5                }           
 271   4                else
 272   4                {
 273   5                  display_uv_time();
 274   5                }
 275   4            }
 276   3            else if(op_over_count==50 || op_over_count==150 || op_over_count==250)
 277   3            {
 278   4              display_none();
 279   4            }
 280   3            if(op_over_count==300)
 281   3            {
 282   4                if(dingshi_counter>0)
 283   4                {
 284   5                  display_dingshi_set();
 285   5                  dingshi_start=1;
 286   5                }           
 287   4                else
 288   4                {
 289   5                  display_uv_time();
 290   5                  uv_start=1;
 291   5                }
 292   4            }
 293   3          
 294   3            
 295   3          }
 296   2          else
 297   2          {
 298   3            if(dingshi_counter>0)
 299   3            {
 300   4              FAN=1;
 301   4              JIARE=1;
 302   4              display_dingshi_time();
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 6   

 303   4            }
 304   3            else
 305   3            {
 306   4              FAN=0;
 307   4              JIARE=0;
 308   4            }
 309   3            if(feng_gan_stop_flag==1)
 310   3            {
 311   4              uv_start=1;
 312   4              uv_counter=20;
 313   4              feng_gan_stop_flag=0;
 314   4              fan_delay_counter=10;
 315   4            }
 316   3            if(uv_counter>0)
 317   3            {
 318   4              if(fan_delay_counter>0)
 319   4              {
 320   5                static u16 i51=0;
 321   5                UV=0;
 322   5                if(i51==1)
 323   5                {
 324   6                  display_uv_led=0x01;
 325   6                } 
 326   5                else if(i51==60)
 327   5                {         
 328   6                  display_uv_led=0x00;          
 329   6                }
 330   5                else if(i51==120)
 331   5                {
 332   6                  i51=0;
 333   6                }
 334   5                i51++;          
 335   5              }
 336   4              else
 337   4              {
 338   5                UV=1;
 339   5                display_uv_led=1;
 340   5              }
 341   4              
 342   4              display_uv_time();
 343   4            }
 344   3            else
 345   3            {
 346   4              UV=0;
 347   4              display_uv_led=0;
 348   4            }
 349   3            
 350   3          }   
 351   2          
 352   2        }
 353   1        if(last_hoted!=dingshi_start)
 354   1        {
 355   2          if(last_hoted==1 && dingshi_start==0)
 356   2          {
 357   3            fan_delay_counter=15700;
 358   3            last_hoted=dingshi_start;
 359   3          }
 360   2          else
 361   2          {
 362   3            last_hoted=dingshi_start;
 363   3          }
 364   2        }
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 7   

 365   1        if(fan_delay_counter>0)
 366   1        {
 367   2          fan_delay_counter--;
 368   2          FAN=1;
 369   2        }
 370   1        
 371   1      }
*** WARNING C280 IN LINE 212 OF ..\..\User\Main.c: 'count02': unreferenced local variable
 372          
 373          
 374          /***********************************红外解码**************************************/
 375          u8 c_timer=0; 
 376          u8 c_end_flag=0;
 377          u8 c_start_flag=0;
 378          xdata u8 nec_buff[34];
 379          u8 nec_index=0;
 380          xdata u8 nec_data[4];
 381          void init_TIMER0()
 382          {
 383   1        TCON1 = 0x00;           //
 384   1        TMOD = 0x00;            //
 385   1        
 386   1        TH0 = 0xFF;
 387   1        TL0 = 0x7B;             //100us
 388   1        IE |= 0x02;             //
 389   1        TCON |= 0x10;           //
 390   1          
 391   1      }
 392          
 393          void TIMER0_Rpt(void) interrupt TIMER0_VECTOR  //时基100us
 394          {
 395   1        static u32 tt=0;
 396   1      
 397   1        c_timer++;
 398   1        if(c_timer>150)
 399   1        {
 400   2          c_end_flag=1;
 401   2          c_timer=0;
 402   2        }
 403   1        if(tt++>600000)
 404   1        {
 405   2          tt=0;
 406   2          if(work_mode==1)    
 407   2          {     
 408   3            if(dingshi_counter>0)
 409   3            {
 410   4              if(dingshi_start==1)
 411   4              {
 412   5                dingshi_counter--;  
 413   5                if(dingshi_counter==0)
 414   5                {
 415   6                  feng_gan_stop_flag=1;
 416   6                  dingshi_start=0;
 417   6                }
 418   5              }
 419   4              
 420   4            }
 421   3            if(uv_counter>0)
 422   3            {
 423   4              if(uv_start==1 && fan_delay_counter==0)
 424   4              {
 425   5                uv_counter--;
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 8   

 426   5                if(uv_counter==0)
 427   5                {
 428   6                  uv_start=0;
 429   6                  work_mode=0;
 430   6                }
 431   5              }
 432   4            }
 433   3          }   
 434   2        }
 435   1        nec_jian_ge++;
 436   1      } 
 437          void init_exti0()
 438          {
 439   1        P3M5 = 0x69;            //P35设置为带SMT上拉输入
 440   1        PITS4 |= 0x04;          //INT17下降沿  
 441   1        PINTE2 = 0x02;
 442   1        IE2 |= 0x01;              //打开INT17中断
 443   1        
 444   1      }
 445          
 446          void ISR_INT16_17(void)  interrupt INT16_17_VECTOR
 447          {
 448   1        PINTF2 &=~ 0x02;        //清除INT17中断标志位    
 449   1        if(c_start_flag)
 450   1        {
 451   2          if(c_timer>105)
 452   2          {
 453   3            nec_index=0;
 454   3          }
 455   2          nec_buff[nec_index]=c_timer;
 456   2          c_timer=0;
 457   2          nec_index++;
 458   2          if(nec_index>33)
 459   2          {
 460   3            nec_index=0;
 461   3          }
 462   2          c_end_flag=0;
 463   2        }
 464   1        else
 465   1        {
 466   2          c_start_flag=1;
 467   2          c_timer=0;
 468   2        }
 469   1      }
 470          void chu_li_nec()
 471          {
 472   1        if(nec_data[0]==0 && nec_data[1]==0xff)
 473   1        {
 474   2          if(nec_jian_ge<3000)
 475   2          {
 476   3            return;
 477   3          }
 478   2          if(nec_data[2]==2)
 479   2          {
 480   3            if(nec_jian_ge<50000)
 481   3            {
 482   4              return;
 483   4            }
 484   3          }
 485   2          nec_jian_ge=0;
 486   2          if(nec_data[2]==0)
 487   2          {
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 9   

 488   3            if(work_mode==0)
 489   3            {
 490   4              work_mode=1;
 491   4              dingshi_counter=90;
 492   4            }
 493   3            else
 494   3            {
 495   4              work_mode=0;
 496   4              dingshi_counter=0;
 497   4              dingshi_start=0;
 498   4              uv_start=0;
 499   4              uv_counter=0;
 500   4            }
 501   3          }
 502   2          else if(work_mode==1 && uv_start==0)
 503   2          {
 504   3            if(uv_counter==0)
 505   3            {
 506   4              if(nec_data[2]==0x08)//
 507   4              {
 508   5                          
 509   5                set_dingshi_time_add();       
 510   5                op_over_count=0;
 511   5              }
 512   4              else if(nec_data[2]==0x0A)//
 513   4              {
 514   5                  
 515   5                set_dingshi_time_red();       
 516   5                op_over_count=0;
 517   5              }
 518   4            }
 519   3            
 520   3          }
 521   2          if(nec_data[2]==0x02)//uv
 522   2          {
 523   3            if(uv_start==0)
 524   3            {
 525   4              work_mode=1;
 526   4              uv_start=0;
 527   4              uv_counter=20;
 528   4              dingshi_counter=0;
 529   4              dingshi_start=0;
 530   4              op_over_count=0;
 531   4            }
 532   3            else
 533   3            {         
 534   4              work_mode=0;
 535   4              dingshi_counter=0;
 536   4              dingshi_start=0;
 537   4              uv_start=0;
 538   4              uv_counter=0;
 539   4            }
 540   3              
 541   3          }
 542   2        }
 543   1        
 544   1      }
 545          extern char putchar (char c);
 546          void decode_nec()
 547          {
 548   1        if(nec_index && c_end_flag)
 549   1        {
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 10  

 550   2          nec_data[0]=(nec_buff[1]<0x0F ? 0 : 1)<<0 |
 551   2                (nec_buff[2]<0x0F ? 0 : 1)<<1 |
 552   2                (nec_buff[3]<0x0F ? 0 : 1)<<2 |
 553   2                (nec_buff[4]<0x0F ? 0 : 1)<<3 |
 554   2                (nec_buff[5]<0x0F ? 0 : 1)<<4 |
 555   2                (nec_buff[6]<0x0F ? 0 : 1)<<5 |
 556   2                (nec_buff[7]<0x0F ? 0 : 1)<<6 |
 557   2                (nec_buff[8]<0x0F ? 0 : 1)<<7 ;
 558   2          nec_data[1]=(nec_buff[9]<0x0F ? 0 : 1)<<0 |
 559   2                (nec_buff[10]<0x0F ? 0 : 1)<<1 |
 560   2                (nec_buff[11]<0x0F ? 0 : 1)<<2 |
 561   2                (nec_buff[12]<0x0F ? 0 : 1)<<3 |
 562   2                (nec_buff[13]<0x0F ? 0 : 1)<<4 |
 563   2                (nec_buff[14]<0x0F ? 0 : 1)<<5 |
 564   2                (nec_buff[15]<0x0F ? 0 : 1)<<6 |
 565   2                (nec_buff[16]<0x0F ? 0 : 1)<<7 ;
 566   2          nec_data[2]=(nec_buff[17]<0x0F ? 0 : 1)<<0 |
 567   2                (nec_buff[18]<0x0F ? 0 : 1)<<1 |
 568   2                (nec_buff[19]<0x0F ? 0 : 1)<<2 |
 569   2                (nec_buff[20]<0x0F ? 0 : 1)<<3 |
 570   2                (nec_buff[21]<0x0F ? 0 : 1)<<4 |
 571   2                (nec_buff[22]<0x0F ? 0 : 1)<<5 |
 572   2                (nec_buff[23]<0x0F ? 0 : 1)<<6 |
 573   2                (nec_buff[24]<0x0F ? 0 : 1)<<7 ;
 574   2          nec_data[3]=(nec_buff[25]<0x0F ? 0 : 1)<<0 |
 575   2                (nec_buff[26]<0x0F ? 0 : 1)<<1 |
 576   2                (nec_buff[27]<0x0F ? 0 : 1)<<2 |
 577   2                (nec_buff[28]<0x0F ? 0 : 1)<<3 |
 578   2                (nec_buff[29]<0x0F ? 0 : 1)<<4 |
 579   2                (nec_buff[30]<0x0F ? 0 : 1)<<5 |
 580   2                (nec_buff[31]<0x0F ? 0 : 1)<<6 |
 581   2                (nec_buff[32]<0x0F ? 0 : 1)<<7 ;
 582   2          nec_index=0;
 583   2          if(nec_data[0]==0 && nec_data[1]==0xff && nec_data[2]==2)
 584   2          {
 585   3            nec_ir_counter++;
 586   3            if(nec_ir_counter>8)
 587   3            {       
 588   4              chu_li_nec();
 589   4            }
 590   3          }
 591   2          else
 592   2          {
 593   3            chu_li_nec();
 594   3          }
 595   2          
 596   2          
 597   2          // putchar(0x56);
 598   2          // putchar(nec_data[0]);
 599   2          // putchar(nec_data[1]);
 600   2          // putchar(nec_data[2]);
 601   2          // putchar(nec_data[3]);
 602   2          
 603   2          nec_data[0]=0;
 604   2          nec_data[1]=0;
 605   2          nec_data[2]=0;
 606   2          nec_data[3]=0;
 607   2        }
 608   1      }
 609          
 610          
 611          
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 11  

 612          
 613          
 614          
 615          
 616          /*************************************ADC************************************************/
 617          
 618          
 619          /***************************************************************************/
 620          //
 621          //#define DISPLAY_A P2_5  P2_1
 622          //#define DISPLAY_B P2_4  P3_4
 623          //#define DISPLAY_C P2_2  P1_4
 624          //#define DISPLAY_D P2_3  P2_4
 625          //#define DISPLAY_E P2_1  P2_5
 626          //#define DISPLAY_F P1_4  P2_2
 627          //#define DISPLAY_G P3_4  P2_3
 628          
 629          #define DISPLAY_A  P2_1
 630          #define DISPLAY_B  P3_4
 631          #define DISPLAY_C  P2_4
 632          #define DISPLAY_D  P2_5
 633          #define DISPLAY_E  P0_2
 634          #define DISPLAY_F  P2_2
 635          #define DISPLAY_G  P2_3
 636          #define DISPLAY_DP P2_0//P2_0//  printf("%s\n", );
 637          
 638          //
 639          #define DISPLAY_COM1 P1_6
 640          #define DISPLAY_COM2 P1_5
 641          
 642          
 643          
 644          void init_display()
 645          {
 646   1        P2M1=GPIO_Out_PP;
 647   1        P3M4=GPIO_Out_PP;
 648   1        P2M4=GPIO_Out_PP;
 649   1        P2M5=GPIO_Out_PP;
 650   1        P0M2=GPIO_Out_PP;
 651   1        P2M2=GPIO_Out_PP;
 652   1        P2M3=GPIO_Out_PP;
 653   1        P2M0=GPIO_Out_PP;
 654   1        
 655   1        P1M6=GPIO_Out_PP;
 656   1        P1M5=GPIO_Out_PP;
 657   1      
 658   1        //display_off();
 659   1        DISPLAY_A=0;
 660   1        DISPLAY_B=0;
 661   1        DISPLAY_C=0;
 662   1        DISPLAY_D=0;
 663   1        DISPLAY_E=0;
 664   1        DISPLAY_F=0;
 665   1        DISPLAY_G=0;
 666   1        DISPLAY_DP=0;
 667   1      
 668   1        DISPLAY_COM1=1;
 669   1        DISPLAY_COM2=1;
 670   1      
 671   1      }
 672          void display_close()
 673          {
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 12  

 674   1        DISPLAY_A=0;
 675   1        DISPLAY_B=0;
 676   1        DISPLAY_C=0;
 677   1        DISPLAY_D=0;
 678   1        DISPLAY_E=0;
 679   1        DISPLAY_F=0;
 680   1        DISPLAY_G=0;
 681   1        DISPLAY_DP=0;
 682   1        DISPLAY_COM1=1;
 683   1        DISPLAY_COM2=1;
 684   1      
 685   1      }
 686          
 687          
 688          void display_1(char c,char b)
 689          {
 690   1      //  display_point
 691   1        
 692   1        
 693   1        DISPLAY_COM1=1;
 694   1        DISPLAY_COM2=1;
 695   1        
 696   1        switch(c)
 697   1        {
 698   2          case 0:
 699   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=0;
 700   2            break;
 701   2          case 1:
 702   2            DISPLAY_A=0;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=0;
 703   2            break;
 704   2          case 2:
 705   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=0;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=0;  DISPLAY_G=1;
 706   2            break;
 707   2          case 3:
 708   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=1;
 709   2            break;
 710   2          case 4:
 711   2            DISPLAY_A=0;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=1;  DISPLAY_G=1;
 712   2            break;
 713   2          case 5:
 714   2            DISPLAY_A=1;  DISPLAY_B=0;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=0;  DISPLAY_F=1;  DISPLAY_G=1;
 715   2            break;
 716   2          case 6:
 717   2            DISPLAY_A=1;  DISPLAY_B=0;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=1;
 718   2            break;
 719   2          case 7:
 720   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=0;
 721   2            break;
 722   2          case 8:
 723   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=1;
 724   2            break;
 725   2          case 9:
 726   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=0;  DISPLAY_F=1;  DISPLAY_G=1;
 727   2            break;
 728   2          default:
 729   2            DISPLAY_A=0;  DISPLAY_B=0;  DISPLAY_C=0;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=0;
 730   2            break;
 731   2          
 732   2        }
 733   1        if(b==1)
 734   1        {
 735   2          DISPLAY_COM1=0;
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 13  

 736   2          DISPLAY_COM2=1;
 737   2        }
 738   1        else if(b==2)
 739   1        {
 740   2          DISPLAY_COM1=1;
 741   2          DISPLAY_COM2=0;
 742   2        }
 743   1        
 744   1        if(display_point)
 745   1        {
 746   2            DISPLAY_DP=1;
 747   2        }
 748   1        else
 749   1        {
 750   2            DISPLAY_DP=0;
 751   2        }
 752   1      }
 753          void display_uv_(char c)
 754          {
 755   1        if(c)
 756   1        {
 757   2          LED1_UV=1;
 758   2        }
 759   1        else
 760   1        {
 761   2          LED1_UV=0;
 762   2        }
 763   1      }
 764          void display_touch_(char c)
 765          {
 766   1        if(c)
 767   1        {
 768   2          LED2_TOUCH=1;
 769   2        }
 770   1        else
 771   1        {
 772   2          LED2_TOUCH=0;
 773   2        }
 774   1      }
 775          void display_flash()
 776          {
 777   1        display_1(display_data1,1);
 778   1        Delay_ms(4);
 779   1        display_1(display_data2,2);
 780   1        display_uv_(display_uv_led);
 781   1        display_touch_(display_touch_led);
 782   1      }
 783          
 784          void  buzzer()
 785          {
 786   1        static char inited=0;
 787   1        int i=0;
 788   1        if(inited==0)
 789   1        {
 790   2          P0M3 = 0xC2;                        //P03设置为推挽输出
 791   2          PWM3_MAP = 0x03;          //PWM3映射P03口
 792   2          PWM3P = 0x20;           //PWM周期为0xFF
 793   2          PWM3D = 0x10;           //PWM占空比设置
 794   2          PWM3C = 0x97;             //使能PWM3，关闭中断，允许输出，时钟4分频
 795   2          inited=1;
 796   2        } 
 797   1        PWM3C = 0x97; 
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 14  

 798   1        Delay_ms(200);
 799   1        PWM3C = 0x07;
 800   1        
 801   1        
 802   1      }
 803          
 804          //void init
 805          
 806          
 807          
 808          
 809          void main()
 810          {
 811   1        u32 ts=0;
 812   1        SystemInit();           //
 813   1        // init_printf();
 814   1        init_display();
 815   1        init_TIMER0();
 816   1        init_exti0();
 817   1        EA = 1;
 818   1        CTK_Init(); 
 819   1                    
 820   1      
 821   1        //printf("start\n\r");  
 822   1        while(1)
 823   1        {
 824   2      
 825   2          if(OneCycleScanDone)
 826   2          {
 827   3            TouchRawDataFilter();   //
 828   3            Touch_Signal_Handle();
 829   3            TouchMultibuttonHandle(); //
 830   3            OneCycleScanDone = 0;
 831   3      
 832   3          }
 833   2          
 834   2            key_check();
 835   2          decode_nec();
 836   2          Delay_ms(4);
 837   2          display_flash();
 838   2          work_check();
 839   2      
 840   2          if(ts++>200)
 841   2          {
 842   3            ts=0;
 843   3            nec_ir_counter=0;
 844   3            // char work_mode=0;
 845   3            // char dingshi_start=0;
 846   3            // u32 dingshi_counter=0;
 847   3            // char uv_start=0;
 848   3            // u32 uv_counter=0;
 849   3            
 850   3            // char last_hoted=0;
 851   3            // u32 op_over_count=0;
 852   3      
 853   3            // char feng_gan_stop_flag=0;
 854   3            // u32 fan_delay_counter=0;
 855   3      
 856   3            // putchar(work_mode);
 857   3            // putchar(dingshi_start);
 858   3            // putchar(dingshi_counter&0xff);
 859   3            // putchar(uv_start);
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 15  

 860   3            // putchar(uv_counter&0xff);
 861   3            // putchar(last_hoted);
 862   3            // putchar(op_over_count&0xff);
 863   3            // putchar(feng_gan_stop_flag);
 864   3            // putchar(fan_delay_counter&0xff);
 865   3            // putchar('\n');
 866   3      
 867   3          }
 868   2      
 869   2        } 
 870   1      }
 871          
 872          
 873          /*********************************END OF FILE************************************/
 874          
 875          
 876          
 877          
 878          
 879          
 880          
 881          
 882          
 883          
 884          
 885          
 886          
 887          
 888          
 889          
 890          
 891          
 892          
 893          
 894          
 895          
 896          
 897          
 898          
 899          
 900          
 901          
 902          
 903          
 904          
 905          
 906          
 907          
 908          
 909          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3011    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     38    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     54       6
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
C51 COMPILER V9.56.0.0   MAIN                                                              12/01/2020 23:24:14 PAGE 16  

   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
