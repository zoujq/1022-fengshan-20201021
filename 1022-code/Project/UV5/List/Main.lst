C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Output\Main.obj
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE ..\..\User\Main.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(..\..\Application;..
                    -\..\User\INC;..\..\Libraries;..\..\User\pt_os) DEBUG PRINT(.\List\Main.lst) TABS(2) OBJECT(.\Output\Main.obj)

line level    source

   1          //================================================================================
   2          #define  ALLOCATE_EXTERN
   3          #include "YX23F01CB.h"
   4          #include "YX23F01CB_SYS.h"
   5          #include "YX23F01CB_IO_INIT.h"
   6          #include "YX23F01CB_GeneralKey_Touch_Lib_V1.04\YX23F01CB_GeneralKey_Touch_Lib.h"
   7          #include "YX23F01CB_GeneralKey_Touch_Lib_V1.04\YX23F01CB_GeneralKey_Touch_Filter.h"
   8          #include "YX23F01CB_GeneralKey_Touch_Lib_V1.04\YX23F01CB_GeneralKey_Touch_Multibutton.h"
   9          #include "YX23F01CB_TouchUartDebug_Lib_V1.00\YX23F01CB_TouchUartDebug_Lib_CFG.h"
  10          #include "YX23F01CB_TouchUartDebug_Lib_V1.00\YX23F01CB_TouchUartDebug_Lib.h"
  11          #include "delay.h"
  12          #include <stdio.h>
  13          
  14          #define TK1 1<<15
  15          #define TK2 1<<14
  16          #define TK3 1<<13
  17          #define TK4 1<<12
  18          #define TK5 1<<11
  19          
  20          
  21          extern void init_printf();
  22          void init_ntc_adc();
  23          void init_display();
  24          unsigned int get_ntc_adc();
  25          void  buzzer();
  26          u16 get_temp();
  27          void init_TIMER0();
  28          void key_check();
  29          void display_flash();
  30          //================================================================================
  31          
  32          char display_data1=0;
  33          char display_data2=0;
  34          char display_point=0;
  35          char display_uv_led=0;
  36          char display_touch_led=0;
  37          
  38          
  39          char dingshi_start=0;
  40          u32 dingshi_counter=0;
  41          char uv_start=0;
  42          u32 uv_counter=0;
  43          char work_mode=0;
  44          char last_hoted=0;
  45          u32 nec_jian_ge=0;
  46          u32 op_over_count=0;
  47          
  48          char feng_gan_stop_flag=0;
  49          u32 fan_delay_counter=0;
  50          
  51          
  52          
  53          //================================================================================
  54          
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 2   

  55          void set_dingshi_time_plus()
  56          {
  57   1        dingshi_counter+=30;
  58   1        if(dingshi_counter>6*60)
  59   1        {
  60   2          dingshi_counter=30;
  61   2        }
  62   1      }
  63          
  64          void set_dingshi_time_add()
  65          {
  66   1        dingshi_counter+=30;
  67   1        if(dingshi_counter>6*60)
  68   1        {
  69   2          dingshi_counter=6*60;
  70   2        }
  71   1      }
  72          void set_dingshi_time_red()
  73          {
  74   1        if(dingshi_counter>30)
  75   1        {
  76   2          dingshi_counter-=30;
  77   2        }
  78   1        else
  79   1        {
  80   2          dingshi_counter=30;
  81   2        }
  82   1      }
  83          
  84          void display_dingshi_set()
  85          {
  86   1        display_data1=dingshi_counter/60;
  87   1        display_data2=(dingshi_counter)%60;
  88   1        if(display_data2>30)
  89   1        {
  90   2          display_data1+=1;
  91   2          display_data2=0;
  92   2        }
  93   1        else if(display_data2>0)
  94   1        {
  95   2          display_data2=5;
  96   2        }
  97   1        else
  98   1        {
  99   2          display_data2=0;
 100   2        }
 101   1        display_point=1;
 102   1      }
 103          
 104          
 105          void display_dingshi_time()
 106          {
 107   1        static u16 i6=0;
 108   1        display_data1=dingshi_counter/60;
 109   1        display_data2=(dingshi_counter)%60;
 110   1        if(display_data2>30)
 111   1        {
 112   2          display_data1+=1;
 113   2          display_data2=0;
 114   2        }
 115   1        else if(display_data2>0)
 116   1        {
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 3   

 117   2          display_data2=5;
 118   2        }
 119   1        else
 120   1        {
 121   2          display_data2=0;
 122   2        }
 123   1        
 124   1        if(i6==1)
 125   1        {
 126   2          display_point=1;
 127   2        } 
 128   1        else if(i6==50)
 129   1        {         
 130   2          display_point=0;          
 131   2        }
 132   1        else if(i6==100)
 133   1        {
 134   2          i6=0;
 135   2        }
 136   1        i6++;
 137   1      }
 138          void display_uv_time()
 139          {
 140   1        display_data1=uv_counter/10;
 141   1        display_data2=uv_counter%10;
 142   1        display_point=0;
 143   1      }
 144          
 145          void display_off()
 146          {
 147   1        display_data1=8;
 148   1        display_data2=8;
 149   1        display_point=0;
 150   1      }
 151          
 152          void display_none()
 153          {
 154   1        display_data1='+';
 155   1        display_data2='+';
 156   1        display_point=0;
 157   1      }
 158          void key_check()
 159          {
 160   1        static u16 ON_TK=0;
 161   1        if(TouchKeyFlag )
 162   1        {   
 163   2          if(ON_TK==0)
 164   2          {
 165   3            ON_TK=1;
 166   3            if(work_mode==0)
 167   3            {
 168   4              work_mode=1;        
 169   4              dingshi_counter=90;
 170   4            }
 171   3            else
 172   3            {
 173   4              if(dingshi_start==1 || uv_start==1)
 174   4              {
 175   5                work_mode=0;
 176   5                dingshi_counter=0;
 177   5                dingshi_start=0;
 178   5                uv_start=0;
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 4   

 179   5                uv_counter=0;
 180   5      
 181   5              }
 182   4              else
 183   4              {
 184   5                if(uv_counter==0)
 185   5                {
 186   6                  set_dingshi_time_plus();  
 187   6                  display_dingshi_set();    
 188   6                }           
 189   5              }
 190   4            }
 191   3            op_over_count=0;
 192   3          }
 193   2          
 194   2        }
 195   1        else
 196   1        {
 197   2          ON_TK=0;
 198   2        }
 199   1      
 200   1      }
 201          #define FAN P1_1
 202          #define UV P0_7
 203          #define JIARE P0_3
 204          #define LED1_UV P1_2 
 205          #define LED2_TOUCH P1_3 
 206          
 207          void work_check()
 208          {
 209   1        static char inited=0;
 210   1        static u16 count02=0;
 211   1        if(inited==0)
 212   1        {
 213   2          P1M1=GPIO_Out_PP;//fan
 214   2          P0M7=GPIO_Out_PP;//vu
 215   2          P0M3=GPIO_Out_PP;//jiare
 216   2          P1M2=GPIO_Out_PP;//LED uv 
 217   2          P1M3=GPIO_Out_PP;//LED2_TOUCH
 218   2          
 219   2          inited=1;
 220   2        }
 221   1        
 222   1        if(work_mode==0)
 223   1        {
 224   2          static u16 i5=0;
 225   2              
 226   2          if(i5==1)
 227   2          {
 228   3            display_touch_led=0x01;
 229   3          } 
 230   2          else if(i5==60)
 231   2          {         
 232   3            display_touch_led=0x00;         
 233   3          }
 234   2          else if(i5==120)
 235   2          {
 236   3            i5=0;
 237   3          }
 238   2          i5++;
 239   2          
 240   2          op_over_count=0;  
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 5   

 241   2          display_uv_led=0;
 242   2          display_off();    
 243   2          FAN=0;
 244   2          JIARE=0;
 245   2          UV=0;
 246   2          dingshi_counter=0;
 247   2          dingshi_start=0;
 248   2          uv_start=0;
 249   2          uv_counter=0;
 250   2          
 251   2        }
 252   1        else
 253   1        {
 254   2          display_touch_led=1;
 255   2          if(op_over_count<300)
 256   2          {     
 257   3            op_over_count++;
 258   3            FAN=0;
 259   3            JIARE=0;
 260   3            UV=0;
 261   3            dingshi_start=0;
 262   3            uv_start=0;
 263   3            if(op_over_count==1 || op_over_count==100 || op_over_count==200 )
 264   3            {       
 265   4                if(dingshi_counter>0)
 266   4                {
 267   5                  display_dingshi_set();
 268   5                }           
 269   4                else
 270   4                {
 271   5                  display_uv_time();
 272   5                }
 273   4            }
 274   3            else if(op_over_count==50 || op_over_count==150 || op_over_count==250)
 275   3            {
 276   4              display_none();
 277   4            }
 278   3            if(op_over_count==300)
 279   3            {
 280   4                if(dingshi_counter>0)
 281   4                {
 282   5                  display_dingshi_set();
 283   5                  dingshi_start=1;
 284   5                }           
 285   4                else
 286   4                {
 287   5                  display_uv_time();
 288   5                  uv_start=1;
 289   5                }
 290   4            }
 291   3          
 292   3            
 293   3          }
 294   2          else
 295   2          {
 296   3            if(dingshi_counter>0)
 297   3            {
 298   4              FAN=1;
 299   4              JIARE=1;
 300   4              display_dingshi_time();
 301   4            }
 302   3            else
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 6   

 303   3            {
 304   4              FAN=0;
 305   4              JIARE=0;
 306   4            }
 307   3            if(feng_gan_stop_flag==1)
 308   3            {
 309   4              uv_start=1;
 310   4              uv_counter=20;
 311   4              feng_gan_stop_flag=0;
 312   4              fan_delay_counter=10;
 313   4            }
 314   3            if(uv_counter>0)
 315   3            {
 316   4              if(fan_delay_counter>0)
 317   4              {
 318   5                UV=0;
 319   5              }
 320   4              else
 321   4              {
 322   5                UV=1;
 323   5              }
 324   4              display_uv_led=1;
 325   4              display_uv_time();
 326   4            }
 327   3            else
 328   3            {
 329   4              UV=0;
 330   4              display_uv_led=0;
 331   4            }
 332   3            
 333   3          }   
 334   2          
 335   2        }
 336   1        if(last_hoted!=dingshi_start)
 337   1        {
 338   2          if(last_hoted==1 && dingshi_start==0)
 339   2          {
 340   3            fan_delay_counter=15700;
 341   3            last_hoted=dingshi_start;
 342   3          }
 343   2          else
 344   2          {
 345   3            last_hoted=dingshi_start;
 346   3          }
 347   2        }
 348   1        if(fan_delay_counter>0)
 349   1        {
 350   2          fan_delay_counter--;
 351   2          FAN=1;
 352   2        }
 353   1        
 354   1      }
*** WARNING C280 IN LINE 210 OF ..\..\User\Main.c: 'count02': unreferenced local variable
 355          
 356          
 357          /***********************************红外解码**************************************/
 358          u8 c_timer=0; 
 359          u8 c_end_flag=0;
 360          u8 c_start_flag=0;
 361          xdata u8 nec_buff[34];
 362          u8 nec_index=0;
 363          xdata u8 nec_data[4];
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 7   

 364          void init_TIMER0()
 365          {
 366   1        TCON1 = 0x00;           //
 367   1        TMOD = 0x00;            //
 368   1        
 369   1        TH0 = 0xFF;
 370   1        TL0 = 0x7B;             //100us
 371   1        IE |= 0x02;             //
 372   1        TCON |= 0x10;           //
 373   1          
 374   1      }
 375          
 376          void TIMER0_Rpt(void) interrupt TIMER0_VECTOR  //时基100us
 377          {
 378   1        static u32 tt=0;
 379   1      
 380   1        c_timer++;
 381   1        if(c_timer>150)
 382   1        {
 383   2          c_end_flag=1;
 384   2          c_timer=0;
 385   2        }
 386   1        if(tt++>600000)
 387   1        {
 388   2          tt=0;
 389   2          if(work_mode==1)    
 390   2          {     
 391   3            if(dingshi_counter>0)
 392   3            {
 393   4              if(dingshi_start==1)
 394   4              {
 395   5                dingshi_counter--;  
 396   5                if(dingshi_counter==0)
 397   5                {
 398   6                  feng_gan_stop_flag=1;
 399   6                  dingshi_start=0;
 400   6                }
 401   5              }
 402   4              
 403   4            }
 404   3            if(uv_counter>0)
 405   3            {
 406   4              if(uv_start==1 && fan_delay_counter==0)
 407   4              {
 408   5                uv_counter--;
 409   5                if(uv_counter==0)
 410   5                {
 411   6                  uv_start=0;
 412   6                  work_mode=0;
 413   6                }
 414   5              }
 415   4            }
 416   3          }   
 417   2        }
 418   1        nec_jian_ge++;
 419   1      } 
 420          void init_exti0()
 421          {
 422   1        P3M5 = 0x69;            //P35设置为带SMT上拉输入
 423   1        PITS4 |= 0x04;          //INT17下降沿  
 424   1        PINTE2 = 0x02;
 425   1        IE2 |= 0x01;              //打开INT17中断
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 8   

 426   1        
 427   1      }
 428          
 429          void ISR_INT16_17(void)  interrupt INT16_17_VECTOR
 430          {
 431   1        PINTF2 &=~ 0x02;        //清除INT17中断标志位    
 432   1        if(c_start_flag)
 433   1        {
 434   2          if(c_timer>105)
 435   2          {
 436   3            nec_index=0;
 437   3          }
 438   2          nec_buff[nec_index]=c_timer;
 439   2          c_timer=0;
 440   2          nec_index++;
 441   2          if(nec_index>33)
 442   2          {
 443   3            nec_index=0;
 444   3          }
 445   2          c_end_flag=0;
 446   2        }
 447   1        else
 448   1        {
 449   2          c_start_flag=1;
 450   2          c_timer=0;
 451   2        }
 452   1      }
 453          void chu_li_nec()
 454          {
 455   1        if(nec_data[0]==0 && nec_data[1]==0xff)
 456   1        {
 457   2          if(nec_jian_ge<3000)
 458   2          {
 459   3            return;
 460   3          }
 461   2          nec_jian_ge=0;
 462   2          if(nec_data[2]==0)
 463   2          {
 464   3            if(work_mode==0)
 465   3            {
 466   4              work_mode=1;
 467   4              dingshi_counter=90;
 468   4            }
 469   3            else
 470   3            {
 471   4              work_mode=0;
 472   4              dingshi_counter=0;
 473   4              dingshi_start=0;
 474   4              uv_start=0;
 475   4              uv_counter=0;
 476   4            }
 477   3          }
 478   2          else if(work_mode==1 && uv_start==0)
 479   2          {
 480   3            if(uv_counter==0)
 481   3            {
 482   4              if(nec_data[2]==0x08)//
 483   4              {
 484   5                          
 485   5                set_dingshi_time_add();       
 486   5                op_over_count=0;
 487   5              }
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 9   

 488   4              else if(nec_data[2]==0x0A)//
 489   4              {
 490   5                  
 491   5                set_dingshi_time_red();       
 492   5                op_over_count=0;
 493   5              }
 494   4            }
 495   3            
 496   3          }
 497   2          if(nec_data[2]==0x02)//uv
 498   2          {
 499   3              if(uv_start==0)
 500   3              {
 501   4                work_mode=1;
 502   4                uv_start=0;
 503   4                uv_counter=20;
 504   4                dingshi_counter=0;
 505   4                dingshi_start=0;
 506   4                op_over_count=0;
 507   4              }
 508   3              else
 509   3              {         
 510   4                work_mode=0;
 511   4                dingshi_counter=0;
 512   4                dingshi_start=0;
 513   4                uv_start=0;
 514   4                uv_counter=0;
 515   4              }
 516   3              
 517   3            }
 518   2        }
 519   1        
 520   1      }
 521          extern char putchar (char c);
 522          void decode_nec()
 523          {
 524   1        if(nec_index && c_end_flag)
 525   1        {
 526   2          nec_data[0]=(nec_buff[1]<0x0F ? 0 : 1)<<0 |
 527   2                (nec_buff[2]<0x0F ? 0 : 1)<<1 |
 528   2                (nec_buff[3]<0x0F ? 0 : 1)<<2 |
 529   2                (nec_buff[4]<0x0F ? 0 : 1)<<3 |
 530   2                (nec_buff[5]<0x0F ? 0 : 1)<<4 |
 531   2                (nec_buff[6]<0x0F ? 0 : 1)<<5 |
 532   2                (nec_buff[7]<0x0F ? 0 : 1)<<6 |
 533   2                (nec_buff[8]<0x0F ? 0 : 1)<<7 ;
 534   2          nec_data[1]=(nec_buff[9]<0x0F ? 0 : 1)<<0 |
 535   2                (nec_buff[10]<0x0F ? 0 : 1)<<1 |
 536   2                (nec_buff[11]<0x0F ? 0 : 1)<<2 |
 537   2                (nec_buff[12]<0x0F ? 0 : 1)<<3 |
 538   2                (nec_buff[13]<0x0F ? 0 : 1)<<4 |
 539   2                (nec_buff[14]<0x0F ? 0 : 1)<<5 |
 540   2                (nec_buff[15]<0x0F ? 0 : 1)<<6 |
 541   2                (nec_buff[16]<0x0F ? 0 : 1)<<7 ;
 542   2          nec_data[2]=(nec_buff[17]<0x0F ? 0 : 1)<<0 |
 543   2                (nec_buff[18]<0x0F ? 0 : 1)<<1 |
 544   2                (nec_buff[19]<0x0F ? 0 : 1)<<2 |
 545   2                (nec_buff[20]<0x0F ? 0 : 1)<<3 |
 546   2                (nec_buff[21]<0x0F ? 0 : 1)<<4 |
 547   2                (nec_buff[22]<0x0F ? 0 : 1)<<5 |
 548   2                (nec_buff[23]<0x0F ? 0 : 1)<<6 |
 549   2                (nec_buff[24]<0x0F ? 0 : 1)<<7 ;
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 10  

 550   2          nec_data[3]=(nec_buff[25]<0x0F ? 0 : 1)<<0 |
 551   2                (nec_buff[26]<0x0F ? 0 : 1)<<1 |
 552   2                (nec_buff[27]<0x0F ? 0 : 1)<<2 |
 553   2                (nec_buff[28]<0x0F ? 0 : 1)<<3 |
 554   2                (nec_buff[29]<0x0F ? 0 : 1)<<4 |
 555   2                (nec_buff[30]<0x0F ? 0 : 1)<<5 |
 556   2                (nec_buff[31]<0x0F ? 0 : 1)<<6 |
 557   2                (nec_buff[32]<0x0F ? 0 : 1)<<7 ;
 558   2          nec_index=0;
 559   2          chu_li_nec();
 560   2          
 561   2      //    putchar(nec_data[0]);
 562   2      //    putchar(nec_data[1]);
 563   2      //    putchar(nec_data[2]);
 564   2      //    putchar(nec_data[3]);
 565   2          
 566   2          nec_data[0]=0;
 567   2          nec_data[1]=0;
 568   2          nec_data[2]=0;
 569   2          nec_data[3]=0;
 570   2        }
 571   1      }
 572          
 573          
 574          
 575          
 576          
 577          
 578          
 579          /*************************************ADC************************************************/
 580          
 581          
 582          /***************************************************************************/
 583          //
 584          //#define DISPLAY_A P2_5  P2_1
 585          //#define DISPLAY_B P2_4  P3_4
 586          //#define DISPLAY_C P2_2  P1_4
 587          //#define DISPLAY_D P2_3  P2_4
 588          //#define DISPLAY_E P2_1  P2_5
 589          //#define DISPLAY_F P1_4  P2_2
 590          //#define DISPLAY_G P3_4  P2_3
 591          
 592          #define DISPLAY_A  P2_1
 593          #define DISPLAY_B  P3_4
 594          #define DISPLAY_C  P2_4
 595          #define DISPLAY_D  P2_5
 596          #define DISPLAY_E  P0_2
 597          #define DISPLAY_F  P2_2
 598          #define DISPLAY_G  P2_3
 599          #define DISPLAY_DP P2_0
 600          
 601          //
 602          #define DISPLAY_COM1 P1_6
 603          #define DISPLAY_COM2 P1_5
 604          
 605          
 606          
 607          void init_display()
 608          {
 609   1        P2M1=GPIO_Out_PP;
 610   1        P3M4=GPIO_Out_PP;
 611   1        P2M4=GPIO_Out_PP;
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 11  

 612   1        P2M5=GPIO_Out_PP;
 613   1        P0M2=GPIO_Out_PP;
 614   1        P2M2=GPIO_Out_PP;
 615   1        P2M3=GPIO_Out_PP;
 616   1        P2M0=GPIO_Out_PP;
 617   1        
 618   1        P1M6=GPIO_Out_PP;
 619   1        P1M5=GPIO_Out_PP;
 620   1      
 621   1        //display_off();
 622   1        DISPLAY_A=0;
 623   1        DISPLAY_B=0;
 624   1        DISPLAY_C=0;
 625   1        DISPLAY_D=0;
 626   1        DISPLAY_E=0;
 627   1        DISPLAY_F=0;
 628   1        DISPLAY_G=0;
 629   1        DISPLAY_DP=0;
 630   1      
 631   1        DISPLAY_COM1=1;
 632   1        DISPLAY_COM2=1;
 633   1      
 634   1      }
 635          void display_close()
 636          {
 637   1        DISPLAY_A=0;
 638   1        DISPLAY_B=0;
 639   1        DISPLAY_C=0;
 640   1        DISPLAY_D=0;
 641   1        DISPLAY_E=0;
 642   1        DISPLAY_F=0;
 643   1        DISPLAY_G=0;
 644   1        DISPLAY_DP=0;
 645   1        DISPLAY_COM1=1;
 646   1        DISPLAY_COM2=1;
 647   1      
 648   1      }
 649          
 650          
 651          void display_1(char c,char b)
 652          {
 653   1      //  display_point
 654   1        
 655   1        
 656   1        DISPLAY_COM1=1;
 657   1        DISPLAY_COM2=1;
 658   1        
 659   1        switch(c)
 660   1        {
 661   2          case 0:
 662   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=0;
 663   2            break;
 664   2          case 1:
 665   2            DISPLAY_A=0;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=0;
 666   2            break;
 667   2          case 2:
 668   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=0;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=0;  DISPLAY_G=1;
 669   2            break;
 670   2          case 3:
 671   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=1;
 672   2            break;
 673   2          case 4:
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 12  

 674   2            DISPLAY_A=0;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=1;  DISPLAY_G=1;
 675   2            break;
 676   2          case 5:
 677   2            DISPLAY_A=1;  DISPLAY_B=0;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=0;  DISPLAY_F=1;  DISPLAY_G=1;
 678   2            break;
 679   2          case 6:
 680   2            DISPLAY_A=1;  DISPLAY_B=0;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=1;
 681   2            break;
 682   2          case 7:
 683   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=0;
 684   2            break;
 685   2          case 8:
 686   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=1;  DISPLAY_F=1;  DISPLAY_G=1;
 687   2            break;
 688   2          case 9:
 689   2            DISPLAY_A=1;  DISPLAY_B=1;  DISPLAY_C=1;  DISPLAY_D=1;  DISPLAY_E=0;  DISPLAY_F=1;  DISPLAY_G=1;
 690   2            break;
 691   2          default:
 692   2            DISPLAY_A=0;  DISPLAY_B=0;  DISPLAY_C=0;  DISPLAY_D=0;  DISPLAY_E=0;  DISPLAY_F=0;  DISPLAY_G=0;
 693   2            break;
 694   2          
 695   2        }
 696   1        if(b==1)
 697   1        {
 698   2          DISPLAY_COM1=0;
 699   2          DISPLAY_COM2=1;
 700   2        }
 701   1        else if(b==2)
 702   1        {
 703   2          DISPLAY_COM1=1;
 704   2          DISPLAY_COM2=0;
 705   2        }
 706   1        
 707   1        if(display_point)
 708   1        {
 709   2            DISPLAY_DP=1;
 710   2        }
 711   1        else
 712   1        {
 713   2            DISPLAY_DP=0;
 714   2        }
 715   1      }
 716          void display_uv_(char c)
 717          {
 718   1        if(c)
 719   1        {
 720   2          LED1_UV=1;
 721   2        }
 722   1        else
 723   1        {
 724   2          LED1_UV=0;
 725   2        }
 726   1      }
 727          void display_touch_(char c)
 728          {
 729   1        if(c)
 730   1        {
 731   2          LED2_TOUCH=1;
 732   2        }
 733   1        else
 734   1        {
 735   2          LED2_TOUCH=0;
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 13  

 736   2        }
 737   1      }
 738          void display_flash()
 739          {
 740   1      
 741   1        display_1(1,2);
 742   1        display_1(display_data1,1);
 743   1        Delay_ms(4);
 744   1        display_1(display_data2,2);
 745   1        display_uv_(display_uv_led);
 746   1        display_touch_(display_touch_led);
 747   1      }
 748          
 749          void  buzzer()
 750          {
 751   1        static char inited=0;
 752   1        int i=0;
 753   1        if(inited==0)
 754   1        {
 755   2          P0M3 = 0xC2;                        //P03设置为推挽输出
 756   2          PWM3_MAP = 0x03;          //PWM3映射P03口
 757   2          PWM3P = 0x20;           //PWM周期为0xFF
 758   2          PWM3D = 0x10;           //PWM占空比设置
 759   2          PWM3C = 0x97;             //使能PWM3，关闭中断，允许输出，时钟4分频
 760   2          inited=1;
 761   2        } 
 762   1        PWM3C = 0x97; 
 763   1        Delay_ms(200);
 764   1        PWM3C = 0x07;
 765   1        
 766   1        
 767   1      }
 768          
 769          //void init
 770          
 771          
 772          
 773          
 774          void main()
 775          {
 776   1        
 777   1        SystemInit();           //
 778   1        //init_printf();
 779   1        init_display();
 780   1        init_TIMER0();
 781   1        init_exti0();
 782   1        EA = 1;
 783   1        CTK_Init(); 
 784   1                    
 785   1      
 786   1        //printf("start\n\r");  
 787   1        while(1)
 788   1        {
 789   2      
 790   2          if(OneCycleScanDone)
 791   2          {
 792   3            TouchRawDataFilter();   //
 793   3            Touch_Signal_Handle();
 794   3            TouchMultibuttonHandle(); //
 795   3            OneCycleScanDone = 0;
 796   3      
 797   3          }
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 14  

 798   2          
 799   2          key_check();
 800   2          decode_nec();
 801   2          Delay_ms(4);
 802   2          display_flash();
 803   2          work_check();
 804   2      
 805   2        } 
 806   1      }
 807          
 808          
 809          /*********************************END OF FILE************************************/
 810          
 811          
 812          
 813          
 814          
 815          
 816          
 817          
 818          
 819          
 820          
 821          
 822          
 823          
 824          
 825          
 826          
 827          
 828          
 829          
 830          
 831          
 832          
 833          
 834          
 835          
 836          
 837          
 838          
 839          
 840          
 841          
 842          
 843          
 844          
 845          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   2837    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     38    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     48       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
C51 COMPILER V9.56.0.0   MAIN                                                              11/28/2020 13:58:45 PAGE 15  

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
